class CharacterStatsGameGUI {
    static getClassName() {
        return "CharacterStatsGameGUI";
    }
    static initialize() {
        if (Game.debugMode) BABYLON.Tools.Log("Initializing CharacterStatsGameGUI");
        CharacterStatsGameGUI.initialized = false;
        CharacterStatsGameGUI.controller = null;
        CharacterStatsGameGUI.titleBar = null;
        CharacterStatsGameGUI.closeButton = null;
        CharacterStatsGameGUI.bodyContainer = null;
        CharacterStatsGameGUI.fullScreen = true;
        CharacterStatsGameGUI.defaultWidthInPixels = 0;
        CharacterStatsGameGUI.defaultHeightInPixels = 0;
        CharacterStatsGameGUI.windowWidthInPixels = -1;
        CharacterStatsGameGUI.windowHeightInPixels = -1;
        CharacterStatsGameGUI.posX = 0;
        CharacterStatsGameGUI.posY = 0;

        CharacterStatsGameGUI.nameField = null;
        CharacterStatsGameGUI.isVisible = false;

        CharacterStatsGameGUI.resetDefaultDimensions();
        CharacterStatsGameGUI.generateController();
        return 0;
    }
    static resetDefaultDimensions() {
        CharacterStatsGameGUI.defaultWidthInPixels = Game.renderWidth;
        CharacterStatsGameGUI.defaultHeightInPixels = Game.renderHeight;
        return 0;
    }
    static resize() {
        if (CharacterStatsGameGUI.initialized != true) {
            return 1;
        }
        CharacterStatsGameGUI.resetDefaultDimensions();
        if (CharacterStatsGameGUI.fullScreen) {
            CharacterStatsGameGUI.windowWidthInPixels = Game.renderWidth;
            CharacterStatsGameGUI.windowHeightInPixels = Game.renderHeight;
        }

        CharacterStatsGameGUI.controller.widthInPixels = CharacterStatsGameGUI.defaultWidthInPixels;
        CharacterStatsGameGUI.controller.heightInPixels = CharacterStatsGameGUI.defaultHeightInPixels;
        CharacterStatsGameGUI.titleBar.widthInPixels = CharacterStatsGameGUI.controller.widthInPixels;
        CharacterStatsGameGUI.titleBar.heightInPixels = GameGUI.titleBarHeightInPixels;
        CharacterStatsGameGUI.title.widthInPixels = CharacterStatsGameGUI.titleBar.widthInPixels - GameGUI.getFontSizeInPixels(2);
        CharacterStatsGameGUI.closeButton.width = GameGUI.getFontSize(2);
        CharacterStatsGameGUI.closeButton.height = GameGUI.getFontSize(2);
        CharacterStatsGameGUI.bodyContainer.widthInPixels = CharacterStatsGameGUI.controller.widthInPixels;
        CharacterStatsGameGUI.bodyContainer.heightInPixels = CharacterStatsGameGUI.controller.heightInPixels - CharacterStatsGameGUI.titleBar.heightInPixels;

        CharacterStatsGameGUI.header.heightInPixels = Math.floor(Math.max(GameGUI.fontSizeInPixelsWithSpacing * 4, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.header.width = CharacterStatsGameGUI.bodyContainer.width;
        CharacterStatsGameGUI.nameContainer.height = CharacterStatsGameGUI.header.height;
        CharacterStatsGameGUI.nameContainer.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.header.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.nameField.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.nameContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.nameField.widthInPixels = CharacterStatsGameGUI.nameContainer.widthInPixels - GameGUI.fontSizeSpacing;
        CharacterStatsGameGUI.nameField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.nameLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.nameLabel.width = CharacterStatsGameGUI.nameContainer.width;
        CharacterStatsGameGUI.nameLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.infoContainer.height = CharacterStatsGameGUI.header.height;
        CharacterStatsGameGUI.infoContainer.widthInPixels = Math.floor(Math.max((CharacterStatsGameGUI.header.widthInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.infoTop.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.infoTop.width = CharacterStatsGameGUI.infoContainer.width;
        CharacterStatsGameGUI.classContainer.height = CharacterStatsGameGUI.infoTop.height;
        CharacterStatsGameGUI.classContainer.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.classField.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.classContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.classField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.classLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.classLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.backgroundContainer.height = CharacterStatsGameGUI.infoTop.height;
        CharacterStatsGameGUI.backgroundContainer.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.backgroundField.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.backgroundContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.backgroundField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.backgroundLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.backgroundLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.accountContainer.height = CharacterStatsGameGUI.infoTop.height;
        CharacterStatsGameGUI.accountContainer.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.accountField.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.accountContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.accountField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.accountLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.accountLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.infoBottom.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.infoBottom.width = CharacterStatsGameGUI.infoContainer.width;
        CharacterStatsGameGUI.raceContainer.height = CharacterStatsGameGUI.infoBottom.height;
        CharacterStatsGameGUI.raceContainer.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoBottom.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.raceField.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.raceContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.raceField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.raceLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.raceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.alignmentContainer.height = CharacterStatsGameGUI.infoBottom.height;
        CharacterStatsGameGUI.alignmentContainer.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoBottom.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.alignmentField.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.alignmentContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.alignmentField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.alignmentLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.alignmentLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.xpContainer.height = CharacterStatsGameGUI.infoBottom.height;
        CharacterStatsGameGUI.xpContainer.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.infoBottom.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.xpField.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.xpContainer.heightInPixels / 3) * 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.xpField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.xpLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.xpLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.body.heightInPixels = Math.floor(CharacterStatsGameGUI.bodyContainer.heightInPixels - CharacterStatsGameGUI.header.heightInPixels);
        CharacterStatsGameGUI.body.width = CharacterStatsGameGUI.bodyContainer.width;
        CharacterStatsGameGUI.colA.height = CharacterStatsGameGUI.body.height;
        CharacterStatsGameGUI.colA.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.colARowA.heightInPixels = Math.floor((CharacterStatsGameGUI.colA.heightInPixels / 7) * 4.75);
        CharacterStatsGameGUI.colARowA.width = CharacterStatsGameGUI.colA.width;
        CharacterStatsGameGUI.colARowAColA.height = CharacterStatsGameGUI.colARowA.height;
        CharacterStatsGameGUI.colARowAColA.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowA.widthInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.strengthContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.strengthContainer.width = CharacterStatsGameGUI.colARowAColA.width;
        CharacterStatsGameGUI.strengthButtons.height = CharacterStatsGameGUI.strengthContainer.height;
        CharacterStatsGameGUI.strengthButtons.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.strengthContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.strengthIncButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.strengthButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.strengthIncButton.width = CharacterStatsGameGUI.strengthButtons.width;
        CharacterStatsGameGUI.strengthIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.strengthDecButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.strengthButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.strengthDecButton.width = CharacterStatsGameGUI.strengthButtons.width;
        CharacterStatsGameGUI.strengthDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.strengthData.height = CharacterStatsGameGUI.strengthContainer.height;
        CharacterStatsGameGUI.strengthData.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.strengthContainer.widthInPixels - CharacterStatsGameGUI.strengthButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.strengthLabel.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.strengthContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.strengthLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.strengthAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGameGUI.strengthAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.strengthAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.strengthAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.dexterityContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.dexterityContainer.width = CharacterStatsGameGUI.colARowAColA.width;
        CharacterStatsGameGUI.dexterityButtons.height = CharacterStatsGameGUI.dexterityContainer.height;
        CharacterStatsGameGUI.dexterityButtons.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.dexterityContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.dexterityIncButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.dexterityButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.dexterityIncButton.width = CharacterStatsGameGUI.dexterityButtons.width;
        CharacterStatsGameGUI.dexterityIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.dexterityDecButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.dexterityButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.dexterityDecButton.width = CharacterStatsGameGUI.dexterityButtons.width;
        CharacterStatsGameGUI.dexterityDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.dexterityData.height = CharacterStatsGameGUI.dexterityContainer.height;
        CharacterStatsGameGUI.dexterityData.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.dexterityContainer.widthInPixels - CharacterStatsGameGUI.dexterityButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.dexterityLabel.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.dexterityContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.dexterityLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.dexterityAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGameGUI.dexterityAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.dexterityAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.dexterityAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.constitutionContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.constitutionContainer.width = CharacterStatsGameGUI.colARowAColA.width;
        CharacterStatsGameGUI.constitutionButtons.height = CharacterStatsGameGUI.constitutionContainer.height;
        CharacterStatsGameGUI.constitutionButtons.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.constitutionContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.constitutionIncButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.constitutionButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.constitutionIncButton.width = CharacterStatsGameGUI.constitutionButtons.width;
        CharacterStatsGameGUI.constitutionIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.constitutionDecButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.constitutionButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.constitutionDecButton.width = CharacterStatsGameGUI.constitutionButtons.width;
        CharacterStatsGameGUI.constitutionDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.constitutionData.height = CharacterStatsGameGUI.constitutionContainer.height;
        CharacterStatsGameGUI.constitutionData.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.constitutionContainer.widthInPixels - CharacterStatsGameGUI.constitutionButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.constitutionLabel.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.constitutionContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.constitutionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.constitutionAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGameGUI.constitutionAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.constitutionAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.constitutionAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.intelligenceContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.intelligenceContainer.width = CharacterStatsGameGUI.colARowAColA.width;
        CharacterStatsGameGUI.intelligenceButtons.height = CharacterStatsGameGUI.intelligenceContainer.height;
        CharacterStatsGameGUI.intelligenceButtons.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.intelligenceContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.intelligenceIncButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.intelligenceButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.intelligenceIncButton.width = CharacterStatsGameGUI.intelligenceButtons.width;
        CharacterStatsGameGUI.intelligenceIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.intelligenceDecButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.intelligenceButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.intelligenceDecButton.width = CharacterStatsGameGUI.intelligenceButtons.width;
        CharacterStatsGameGUI.intelligenceDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.intelligenceData.height = CharacterStatsGameGUI.intelligenceContainer.height;
        CharacterStatsGameGUI.intelligenceData.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.intelligenceContainer.widthInPixels - CharacterStatsGameGUI.intelligenceButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.intelligenceLabel.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.intelligenceContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.intelligenceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.intelligenceAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGameGUI.intelligenceAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.intelligenceAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.intelligenceAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.wisdomContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.wisdomContainer.width = CharacterStatsGameGUI.colARowAColA.width;
        CharacterStatsGameGUI.wisdomButtons.height = CharacterStatsGameGUI.wisdomContainer.height;
        CharacterStatsGameGUI.wisdomButtons.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.wisdomContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.wisdomIncButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.wisdomButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.wisdomIncButton.width = CharacterStatsGameGUI.wisdomButtons.width;
        CharacterStatsGameGUI.wisdomIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.wisdomDecButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.wisdomButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.wisdomDecButton.width = CharacterStatsGameGUI.wisdomButtons.width;
        CharacterStatsGameGUI.wisdomDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.wisdomData.height = CharacterStatsGameGUI.wisdomContainer.height;
        CharacterStatsGameGUI.wisdomData.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.wisdomContainer.widthInPixels - CharacterStatsGameGUI.wisdomButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.wisdomLabel.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.wisdomContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.wisdomLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.wisdomAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGameGUI.wisdomAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.wisdomAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.wisdomAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.charismaContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColA.heightInPixels / 6, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.charismaContainer.width = CharacterStatsGameGUI.colARowAColA.width;
        CharacterStatsGameGUI.charismaButtons.height = CharacterStatsGameGUI.charismaContainer.height;
        CharacterStatsGameGUI.charismaButtons.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.charismaContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.charismaIncButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.charismaButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.charismaIncButton.width = CharacterStatsGameGUI.charismaButtons.width;
        CharacterStatsGameGUI.charismaIncButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.charismaDecButton.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.charismaButtons.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.charismaDecButton.width = CharacterStatsGameGUI.charismaButtons.width;
        CharacterStatsGameGUI.charismaDecButton.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.charismaData.height = CharacterStatsGameGUI.charismaContainer.height;
        CharacterStatsGameGUI.charismaData.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.charismaContainer.widthInPixels - CharacterStatsGameGUI.charismaButtons.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.charismaLabel.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.charismaContainer.heightInPixels / 4, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.charismaLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.charismaAbilityModifier.height = GameGUI.fontSize;
        CharacterStatsGameGUI.charismaAbilityModifier.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.charismaAbilityField.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.charismaAbilityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.colARowAColB.height = CharacterStatsGameGUI.colARowA.height;
        CharacterStatsGameGUI.colARowAColB.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowA.widthInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.inspirationContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColB.heightInPixels / 12, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.inspirationContainer.width = CharacterStatsGameGUI.colARowAColB.width;
        CharacterStatsGameGUI.inspirationField.height = CharacterStatsGameGUI.inspirationContainer.height;
        CharacterStatsGameGUI.inspirationField.width = CharacterStatsGameGUI.inspirationField.height;
        CharacterStatsGameGUI.inspirationField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.inspirationLabel.height = CharacterStatsGameGUI.inspirationContainer.height;
        CharacterStatsGameGUI.inspirationLabel.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.inspirationContainer.widthInPixels - CharacterStatsGameGUI.inspirationField.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.inspirationLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.proficiencyBonusContainer.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowAColB.heightInPixels / 12, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.proficiencyBonusContainer.width = CharacterStatsGameGUI.colARowAColB.width;
        CharacterStatsGameGUI.proficiencyBonusField.height = CharacterStatsGameGUI.proficiencyBonusContainer.height;
        CharacterStatsGameGUI.proficiencyBonusField.width = CharacterStatsGameGUI.proficiencyBonusField.height;
        CharacterStatsGameGUI.proficiencyBonusField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.proficiencyBonusLabel.height = CharacterStatsGameGUI.proficiencyBonusContainer.height;
        CharacterStatsGameGUI.proficiencyBonusLabel.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.proficiencyBonusContainer.widthInPixels - CharacterStatsGameGUI.proficiencyBonusField.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.proficiencyBonusLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowContainer.heightInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 8);
        CharacterStatsGameGUI.savingThrowContainer.width = CharacterStatsGameGUI.colARowAColB.width;
        CharacterStatsGameGUI.savingThrowStrengthContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowStrengthContainer.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowStrengthCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowStrengthCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowStrengthField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.savingThrowStrengthField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowStrengthLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowStrengthLabel.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowDexterityContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowDexterityContainer.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowDexterityCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowDexterityCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowDexterityField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.savingThrowDexterityField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowDexterityLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowDexterityLabel.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowConstitutionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowConstitutionContainer.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowConstitutionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowConstitutionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowConstitutionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.savingThrowConstitutionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowConstitutionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowConstitutionLabel.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowIntelligenceContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowIntelligenceContainer.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowIntelligenceCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowIntelligenceCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowIntelligenceField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.savingThrowIntelligenceField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowIntelligenceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowIntelligenceLabel.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowWisdomContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowWisdomContainer.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowWisdomCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowWisdomCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowWisdomField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.savingThrowWisdomField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowWisdomLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowWisdomLabel.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowCharismaContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowCharismaContainer.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowCharismaCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowCharismaCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowCharismaField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.savingThrowCharismaField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowCharismaLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowCharismaLabel.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowLabel.width = CharacterStatsGameGUI.savingThrowContainer.width;
        CharacterStatsGameGUI.savingThrowLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.savingThrowContainer.paddingBottom = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillContainer.heightInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 18);
        CharacterStatsGameGUI.skillContainer.width = CharacterStatsGameGUI.colARowAColB.width;
        CharacterStatsGameGUI.skillAcrobaticsContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAcrobaticsContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillAcrobaticsCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAcrobaticsCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAcrobaticsField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAcrobaticsField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillAcrobaticsLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAcrobaticsLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillAnimalHandlingContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAnimalHandlingContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillAnimalHandlingCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAnimalHandlingCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAnimalHandlingField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAnimalHandlingField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillAnimalHandlingLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAnimalHandlingLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillArcanaContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillArcanaContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillArcanaCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillArcanaCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillArcanaField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillArcanaField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillArcanaLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillArcanaLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillAthleticsContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAthleticsContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillAthleticsCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAthleticsCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAthleticsField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAthleticsField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillAthleticsLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillAthleticsLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillDeceptionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillDeceptionContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillDeceptionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillDeceptionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillDeceptionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillDeceptionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillDeceptionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillDeceptionLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillHistoryContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillHistoryContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillHistoryCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillHistoryCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillHistoryField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillHistoryField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillHistoryLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillHistoryLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillInsightContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInsightContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillInsightCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInsightCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInsightField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInsightField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillInsightLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInsightLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillIntimidationContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillIntimidationContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillIntimidationCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillIntimidationCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillIntimidationField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillIntimidationField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillIntimidationLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillIntimidationLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillInvestigationContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInvestigationContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillInvestigationCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInvestigationCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInvestigationField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInvestigationField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillInvestigationLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillInvestigationLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillMedicineContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillMedicineContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillMedicineCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillMedicineCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillMedicineField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillMedicineField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillMedicineLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillMedicineLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillNatureContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillNatureContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillNatureCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillNatureCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillNatureField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillNatureField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillNatureLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillNatureLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillPerceptionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerceptionContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillPerceptionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerceptionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerceptionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerceptionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillPerceptionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerceptionLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillPerformanceContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerformanceContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillPerformanceCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerformanceCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerformanceField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerformanceField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillPerformanceLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPerformanceLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillPersuasionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPersuasionContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillPersuasionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPersuasionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPersuasionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPersuasionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillPersuasionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillPersuasionLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillReligionContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillReligionContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillReligionCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillReligionCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillReligionField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillReligionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillReligionLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillReligionLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillSleightOfHandContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillSleightOfHandContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillSleightOfHandCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillSleightOfHandCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillSleightOfHandField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillSleightOfHandField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillSleightOfHandLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillSleightOfHandLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillStealthContainer.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillStealthContainer.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillStealthCheckbox.width = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillStealthCheckbox.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillStealthField.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillStealthField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
        CharacterStatsGameGUI.skillStealthLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillStealthLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.skillLabel.width = CharacterStatsGameGUI.skillContainer.width;
        CharacterStatsGameGUI.skillLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.colARowB.heightInPixels = Math.floor(Math.max((CharacterStatsGameGUI.colA.heightInPixels / 7) * 0.5, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.colARowB.width = CharacterStatsGameGUI.colA.width;
        CharacterStatsGameGUI.passiveWisdomField.height = CharacterStatsGameGUI.colARowB.height;
        CharacterStatsGameGUI.passiveWisdomField.width = CharacterStatsGameGUI.passiveWisdomField.height;
        CharacterStatsGameGUI.passiveWisdomField.fontSize = GameGUI.fontSize;
        CharacterStatsGameGUI.passiveWisdomLabel.height = CharacterStatsGameGUI.colARowB.height;
        CharacterStatsGameGUI.passiveWisdomLabel.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.colARowB.widthInPixels - CharacterStatsGameGUI.passiveWisdomField.widthInPixels, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.passiveWisdomLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.proficienciesAndLanguagesContainer.heightInPixels = Math.floor((CharacterStatsGameGUI.colA.heightInPixels / 7) * 2.5);
        CharacterStatsGameGUI.proficienciesAndLanguagesContainer.width = CharacterStatsGameGUI.colA.width;
        CharacterStatsGameGUI.proficienciesAndLanguagesField.heightInPixels = Math.floor(CharacterStatsGameGUI.proficienciesAndLanguagesContainer.heightInPixels - GameGUI.fontSizeSmallInPixels);
        CharacterStatsGameGUI.proficienciesAndLanguagesField.width = CharacterStatsGameGUI.proficienciesAndLanguagesContainer.width;
        CharacterStatsGameGUI.proficienciesAndLanguagesLabel.height = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.proficienciesAndLanguagesLabel.fontSize = GameGUI.fontSizeSmall;
        CharacterStatsGameGUI.colB.height = CharacterStatsGameGUI.body.height;
        CharacterStatsGameGUI.colB.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        CharacterStatsGameGUI.colC.height = CharacterStatsGameGUI.body.height;
        CharacterStatsGameGUI.colC.widthInPixels = Math.floor(Math.max(CharacterStatsGameGUI.body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
        return 0;
    }
    static generateController() {
        [CharacterStatsGameGUI.controller, CharacterStatsGameGUI.titleBar, CharacterStatsGameGUI.title, CharacterStatsGameGUI.closeButton, CharacterStatsGameGUI.bodyContainer] = GameGUI.createWindow("characterStats", "Stats", CharacterStatsGameGUI.defaultWidthInPixels, CharacterStatsGameGUI.defaultHeightInPixels, 2);
        CharacterStatsGameGUI.controller.isVertical = true;
        let header = GameGUI.createStackPanel("header");
            header.heightInPixels = Math.floor(GameGUI.fontSizeInPixelsWithSpacing * 4);
            header.width = CharacterStatsGameGUI.bodyContainer.width;
            header.isVertical = false;
            let hNameContainer = GameGUI.createStackPanel("nameContainer");
                hNameContainer.height = header.height;
                hNameContainer.widthInPixels = Math.floor(Math.max(header.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                let hNCField = GameGUI.createInputText("nameField");
                    hNCField.heightInPixels = Math.floor(Math.max(hNameContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                    hNCField.widthInPixels = Math.floor(hNameContainer.widthInPixels - GameGUI.fontSizeSpacing);
                    hNCField.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                    hNCField.isEnabled = false;
                hNameContainer.addControl(hNCField);
                let hNCLabel = GameGUI.createTextBlock("nameLabel");
                    hNCLabel.heightInPixels = Math.floor(Math.max(hNameContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                    hNCLabel.width = hNameContainer.width;
                    hNCLabel.text = "Character Name";
                    //hNCLabel.textSmall = "Char. Name";
                    //hNCLabel.textTiny = "Chr Nm";
                    hNCLabel.fontSize = GameGUI.fontSizeSmall;
                    hNCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                hNameContainer.addControl(hNCLabel);
            header.addControl(hNameContainer);
            let hInfoContainer = GameGUI.createStackPanel("infoContainer");
                hInfoContainer.height = header.height;
                hInfoContainer.widthInPixels = Math.floor(Math.max(header.widthInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                hInfoContainer.isVertical = true;
                let hICTop = GameGUI.createStackPanel("infoContainerTop");
                    hICTop.heightInPixels = Math.floor(Math.max(hInfoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
                    hICTop.width = hInfoContainer.width;
                    hICTop.isVertical = false;
                    let hICTClassContainer = GameGUI.createStackPanel("classContainer");
                        hICTClassContainer.height = hICTop.height;
                        hICTClassContainer.widthInPixels = Math.floor(Math.max(hICTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                        hICTClassContainer.isVertical = true;
                        let hICTCCText = GameGUI.createTextBlock("className");
                            hICTCCText.heightInPixels = Math.floor(Math.max(hICTClassContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                            hICTCCText.color = GameGUI.color;
                            hICTCCText.fontSize = GameGUI.fontSize;
                            hICTCCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICTClassContainer.addControl(hICTCCText);
                        let hICTCCLabel = GameGUI.createTextBlock("classLabel");
                            hICTCCLabel.heightInPixels = Math.floor(Math.max(hICTClassContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                            hICTCCLabel.text = "Class and Level";
                            //hICTCCLabel.textSmall = "Class & Level";
                            //hICTCCLabel.textTiny = "Cls & Lvl";
                            hICTCCLabel.fontSize = GameGUI.fontSizeSmall;
                            hICTCCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICTClassContainer.addControl(hICTCCLabel);
                    hICTop.addControl(hICTClassContainer);
                    let hICTBGgContainer = GameGUI.createStackPanel("backgroundContainer");
                        hICTBGgContainer.height = hICTop.height;
                        hICTBGgContainer.widthInPixels = Math.floor(Math.max(hICTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                        hICTBGgContainer.isVertical = true;
                        let hICTBGCText = GameGUI.createTextBlock("bgName");
                            hICTBGCText.heightInPixels = Math.floor(Math.max(hICTBGgContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                            hICTBGCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICTBGgContainer.addControl(hICTBGCText);
                        let hICTBGCLabel = GameGUI.createTextBlock("bgLabel");
                            hICTBGCLabel.heightInPixels = Math.floor(Math.max(hICTBGgContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                            hICTBGCLabel.text = "Background";
                            //hICTBGCLabel.textSmall = "Bckgnd";
                            //hICTBGCLabel.textTiny = "Bg";
                            hICTBGCLabel.fontSize = GameGUI.fontSizeSmall;
                            hICTBGCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICTBGgContainer.addControl(hICTBGCLabel);
                    hICTop.addControl(hICTBGgContainer);
                    let hICTAccNameContainer = GameGUI.createStackPanel("accountNameContainer");
                        hICTAccNameContainer.height = hICTop.height;
                        hICTAccNameContainer.widthInPixels = Math.floor(Math.max(hICTop.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                        hICTAccNameContainer.isVertical = true;
                        let hICTANCText = GameGUI.createTextBlock("anName");
                            hICTANCText.heightInPixels = Math.floor(Math.max(hICTAccNameContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                            hICTANCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICTAccNameContainer.addControl(hICTANCText);
                        let hICTANCLabel = GameGUI.createTextBlock("anLabel");
                            hICTANCLabel.heightInPixels = Math.floor(Math.max(hICTAccNameContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                            hICTANCLabel.text = "Account Name";
                            //hICTANCLabel.textSmall = "Acct. Name";
                            //hICTANCLabel.textTiny = "Act Nm";
                            hICTANCLabel.fontSize = GameGUI.fontSizeSmall;
                            hICTANCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICTAccNameContainer.addControl(hICTANCLabel);
                    hICTop.addControl(hICTAccNameContainer);
                hInfoContainer.addControl(hICTop);
                let hICBot = GameGUI.createStackPanel("infoSubContainerBottom");
                    hICBot.heightInPixels = Math.floor(Math.max(hInfoContainer.heightInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
                    hICBot.width = hInfoContainer.width;
                    hICBot.isVertical = false;
                    hInfoContainer.addControl(hICBot);
                    let hICBRaceContainer = GameGUI.createStackPanel("infoRaceContainer");
                        hICBRaceContainer.height = hICBot.height;
                        hICBRaceContainer.widthInPixels = Math.floor(Math.max(hICBot.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                        hICBRaceContainer.isVertical = true;
                        let hICBRCText = GameGUI.createTextBlock("raceName");
                            hICBRCText.heightInPixels = Math.floor(Math.max(hICBRaceContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                            hICBRCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICBRaceContainer.addControl(hICBRCText);
                        let hICBRCLabel = GameGUI.createTextBlock("raceLabel");
                            hICBRCLabel.heightInPixels = Math.floor(Math.max(hICBRaceContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                            hICBRCLabel.text = "Race";
                            //hICBRCLabel.textSmall = "Race";
                            //hICBRCLabel.textTiny = "Rc";
                            hICBRCLabel.fontSize = GameGUI.fontSizeSmall;
                            hICBRCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICBRaceContainer.addControl(hICBRCLabel);
                    hICBot.addControl(hICBRaceContainer);
                    let hICBAlignmentContainer = GameGUI.createStackPanel("alignmentContainer");
                        hICBAlignmentContainer.height = hICBot.height;
                        hICBAlignmentContainer.widthInPixels = Math.floor(Math.max(hICBot.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                        hICBAlignmentContainer.isVertical = true;
                        let hICBACText = GameGUI.createTextBlock("alignmentName");
                            hICBACText.heightInPixels = Math.floor(Math.max(hICBAlignmentContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                            hICBACText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICBAlignmentContainer.addControl(hICBACText);
                        let hICBACLabel = GameGUI.createTextBlock("alignmentLabel");
                            hICBACLabel.heightInPixels = Math.floor(Math.max(hICBAlignmentContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                            hICBACLabel.text = "Alignment";
                            //hICBACLabel.textSmall = "Align.";
                            //hICBACLabel.textTiny = "Alnmt";
                            hICBACLabel.fontSize = GameGUI.fontSizeSmall;
                            hICBACLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICBAlignmentContainer.addControl(hICBACLabel);
                    hICBot.addControl(hICBAlignmentContainer);
                    let hICBXPContainer = GameGUI.createStackPanel("xpContainer");
                        hICBXPContainer.height = hICBot.height;
                        hICBXPContainer.widthInPixels = Math.floor(Math.max(hICBot.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                        hICBXPContainer.isVertical = true;
                        let hICBXPCText = GameGUI.createTextBlock("xpName");
                            hICBXPCText.heightInPixels = Math.floor(Math.max(hICBXPContainer.heightInPixels / 3 * 2, GameGUI.fontSizeInPixelsWithSpacing));
                            hICBXPCText.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICBXPContainer.addControl(hICBXPCText);
                        let hICBXPCLabel = GameGUI.createTextBlock("xpLabel");
                            hICBXPCLabel.heightInPixels = Math.floor(Math.max(hICBXPContainer.heightInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                            hICBXPCLabel.text = "Experience Points";
                            //hICBXPCLabel.textSmall = "XP";
                            //hICBXPCLabel.textTiny = "XP";
                            hICBXPCLabel.fontSize = GameGUI.fontSizeSmall;
                            hICBXPCLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                        hICBXPContainer.addControl(hICBXPCLabel);
                    hICBot.addControl(hICBXPContainer);
            header.addControl(hInfoContainer);
        CharacterStatsGameGUI.bodyContainer.addControl(header);
        let body = GameGUI.createStackPanel("body");
            body.heightInPixels = Math.floor(Math.max(CharacterStatsGameGUI.bodyContainer.heightInPixels - (GameGUI.fontSizeInPixelsWithSpacing * 3), GameGUI.fontSizeInPixelsWithSpacing));
            body.width = CharacterStatsGameGUI.bodyContainer.width;
            body.isVertical = false;
            let colA = GameGUI.createStackPanel("colA");
                colA.height = body.height;
                colA.widthInPixels = Math.floor(Math.max(body.widthInPixels / 3, GameGUI.fontSizeInPixelsWithSpacing));
                colA.isVertical = true;
                let colARowA = GameGUI.createStackPanel("colARowA");
                    colARowA.heightInPixels = Math.floor(Math.max(colA.heightInPixels / 7 * 4.5, GameGUI.fontSizeInPixelsWithSpacing));
                    colARowA.width = colA.width;
                    colARowA.isVertical = false;
                    let colARowAColA = GameGUI.createStackPanel("colARowAColA");
                        colARowAColA.height = colARowA.height;
                        colARowAColA.widthInPixels = Math.floor(Math.max(colARowA.widthInPixels / 2, GameGUI.fontSizeInPixelsWithSpacing));
                        colARowAColA.isVertical = true;
                        let strengthContainer = GameGUI.createStackPanel("strengthContainer");
                            strengthContainer.heightInPixels = Math.floor(colARowAColA.heightInPixels / 6);
                            strengthContainer.width = colARowAColA.width;
                            strengthContainer.isVertical = false;
                            let strengthButtons = GameGUI.createStackPanel("strengthButtons");
                                strengthButtons.height = strengthContainer.height;
                                strengthButtons.widthInPixels = Math.floor(strengthContainer.heightInPixels / 2);
                                strengthButtons.isVeritcal = true;
                                let strengthIncButton = GameGUI.createImageButton("strengthInc", "+");
                                    strengthIncButton.heightInPixels = Math.floor(strengthButtons.heightInPixels / 2);
                                    strengthIncButton.width = strengthButtons.width;
                                strengthButtons.addControl(strengthIncButton);
                                let strengthDecButton = GameGUI.createImageButton("strengthDec", "-");
                                    strengthDecButton.heightInPixels = Math.floor(strengthButtons.heightInPixels / 2);
                                    strengthDecButton.width = strengthButtons.width;
                                strengthButtons.addControl(strengthDecButton);
                            strengthContainer.addControl(strengthButtons);
                            let strengthData = GameGUI.createStackPanel("strengthData");
                                strengthData.height = strengthContainer.height;
                                strengthData.widthInPixels = Math.floor(strengthContainer.widthInPixels - strengthButtons.widthInPixels);
                                strengthData.isVertical = true;
                                let strengthLabel = GameGUI.createTextBlock("strengthLabel");
                                    strengthLabel.heightInPixels = Math.floor(strengthContainer.heightInPixels / 4);
                                    strengthLabel.fontSize = GameGUI.fontSizeSmall;
                                    strengthLabel.text = "Strength";
                                    //strengthLabel.textSmall = "Strength";
                                    //strengthLabel.textTiny = "Str";
                                strengthData.addControl(strengthLabel);
                                let strengthAbilityModifier = GameGUI.createTextBlock("strengthAbilityModifier");
                                    strengthAbilityModifier.height = GameGUI.fontSize;
                                    strengthAbilityModifier.text = "0";
                                strengthData.addControl(strengthAbilityModifier);
                                let strengthAbilityScore = GameGUI.createInputText("strengthAbilityScore");
                                    strengthAbilityScore.heightInPixels = Math.floor(strengthContainer.heightInPixels / 4);
                                    strengthAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                    strengthAbilityScore.text = "10";
                                    strengthAbilityScore.isEnabled = false;
                                strengthData.addControl(strengthAbilityScore);
                            strengthContainer.addControl(strengthData);
                        colARowAColA.addControl(strengthContainer);
                        let dexterityContainer = GameGUI.createStackPanel("dexterityContainer");
                            dexterityContainer.heightInPixels = Math.floor(colARowAColA.heightInPixels / 6);
                            dexterityContainer.width = colARowAColA.width;
                            dexterityContainer.isVertical = false;
                            let dexterityButtons = GameGUI.createStackPanel("dexterityButtons");
                                dexterityButtons.height = dexterityContainer.height;
                                dexterityButtons.widthInPixels = Math.floor(dexterityContainer.heightInPixels / 2);
                                dexterityButtons.isVeritcal = true;
                                let dexterityIncButton = GameGUI.createImageButton("dexterityInc", "+");
                                    dexterityIncButton.heightInPixels = Math.floor(dexterityButtons.heightInPixels / 2);
                                    dexterityIncButton.width = dexterityButtons.width;
                                dexterityButtons.addControl(dexterityIncButton);
                                let dexterityDecButton = GameGUI.createImageButton("dexterityDec", "-");
                                    dexterityDecButton.heightInPixels = Math.floor(dexterityButtons.heightInPixels / 2);
                                    dexterityDecButton.width = dexterityButtons.width;
                                dexterityButtons.addControl(dexterityDecButton);
                            dexterityContainer.addControl(dexterityButtons);
                            let dexterityData = GameGUI.createStackPanel("dexterityData");
                                dexterityData.height = dexterityContainer.height;
                                dexterityData.widthInPixels = Math.floor(dexterityContainer.widthInPixels - dexterityButtons.widthInPixels);
                                dexterityData.isVertical = true;
                                let dexterityLabel = GameGUI.createTextBlock("dexterityLabel");
                                    dexterityLabel.heightInPixels = Math.floor(dexterityContainer.heightInPixels / 4);
                                    dexterityLabel.fontSize = GameGUI.fontSizeSmall;
                                    dexterityLabel.text = "Dexterity";
                                    //dexterityLabel.textSmall = "Dexterity";
                                    //dexterityLabel.textTiny = "Dex";
                                dexterityData.addControl(dexterityLabel);
                                let dexterityAbilityModifier = GameGUI.createTextBlock("dexterityAbilityModifier");
                                    dexterityAbilityModifier.height = GameGUI.fontSize;
                                    dexterityAbilityModifier.text = "0";
                                dexterityData.addControl(dexterityAbilityModifier);
                                let dexterityAbilityScore = GameGUI.createInputText("dexterityAbilityScore");
                                    dexterityAbilityScore.heightInPixels = Math.floor(dexterityContainer.heightInPixels / 4);
                                    dexterityAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                    dexterityAbilityScore.text = "10";
                                    dexterityAbilityScore.isEnabled = false;
                                dexterityData.addControl(dexterityAbilityScore);
                            dexterityContainer.addControl(dexterityData);
                        colARowAColA.addControl(dexterityContainer);
                        let constitutionContainer = GameGUI.createStackPanel("constitutionContainer");
                            constitutionContainer.heightInPixels = Math.floor(colARowAColA.heightInPixels / 6);
                            constitutionContainer.width = colARowAColA.width;
                            constitutionContainer.isVertical = false;
                            let constitutionButtons = GameGUI.createStackPanel("constitutionButtons");
                                constitutionButtons.height = constitutionContainer.height;
                                constitutionButtons.widthInPixels = Math.floor(constitutionContainer.heightInPixels / 2);
                                constitutionButtons.isVeritcal = true;
                                let constitutionIncButton = GameGUI.createImageButton("constitutionInc", "+");
                                    constitutionIncButton.heightInPixels = Math.floor(constitutionButtons.heightInPixels / 2);
                                    constitutionIncButton.width = constitutionButtons.width;
                                constitutionButtons.addControl(constitutionIncButton);
                                let constitutionDecButton = GameGUI.createImageButton("constitutionDec", "-");
                                    constitutionDecButton.heightInPixels = Math.floor(constitutionButtons.heightInPixels / 2);
                                    constitutionDecButton.width = constitutionButtons.width;
                                constitutionButtons.addControl(constitutionDecButton);
                            constitutionContainer.addControl(constitutionButtons);
                            let constitutionData = GameGUI.createStackPanel("constitutionData");
                                constitutionData.height = constitutionContainer.height;
                                constitutionData.widthInPixels = Math.floor(constitutionContainer.widthInPixels - constitutionButtons.widthInPixels);
                                constitutionData.isVertical = true;
                                let constitutionLabel = GameGUI.createTextBlock("constitutionLabel");
                                    constitutionLabel.heightInPixels = Math.floor(constitutionContainer.heightInPixels / 4);
                                    constitutionLabel.fontSize = GameGUI.fontSizeSmall;
                                    constitutionLabel.text = "Constitution";
                                    //constitutionLabel.textSmall = "Constitution";
                                    //constitutionLabel.textTiny = "Con";
                                constitutionData.addControl(constitutionLabel);
                                let constitutionAbilityModifier = GameGUI.createTextBlock("constitutionAbilityModifier");
                                    constitutionAbilityModifier.height = GameGUI.fontSize;
                                    constitutionAbilityModifier.text = "0";
                                constitutionData.addControl(constitutionAbilityModifier);
                                let constitutionAbilityScore = GameGUI.createInputText("constitutionAbilityScore");
                                    constitutionAbilityScore.heightInPixels = Math.floor(constitutionContainer.heightInPixels / 4);
                                    constitutionAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                    constitutionAbilityScore.text = "10";
                                    constitutionAbilityScore.isEnabled = false;
                                constitutionData.addControl(constitutionAbilityScore);
                            constitutionContainer.addControl(constitutionData);
                        colARowAColA.addControl(constitutionContainer);
                        let intelligenceContainer = GameGUI.createStackPanel("intelligenceContainer");
                            intelligenceContainer.heightInPixels = Math.floor(colARowAColA.heightInPixels / 6);
                            intelligenceContainer.width = colARowAColA.width;
                            intelligenceContainer.isVertical = false;
                            let intelligenceButtons = GameGUI.createStackPanel("intelligenceButtons");
                                intelligenceButtons.height = intelligenceContainer.height;
                                intelligenceButtons.widthInPixels = Math.floor(intelligenceContainer.heightInPixels / 2);
                                intelligenceButtons.isVeritcal = true;
                                let intelligenceIncButton = GameGUI.createImageButton("intelligenceInc", "+");
                                    intelligenceIncButton.heightInPixels = Math.floor(intelligenceButtons.heightInPixels / 2);
                                    intelligenceIncButton.width = intelligenceButtons.width;
                                intelligenceButtons.addControl(intelligenceIncButton);
                                let intelligenceDecButton = GameGUI.createImageButton("intelligenceDec", "-");
                                    intelligenceDecButton.heightInPixels = Math.floor(intelligenceButtons.heightInPixels / 2);
                                    intelligenceDecButton.width = intelligenceButtons.width;
                                intelligenceButtons.addControl(intelligenceDecButton);
                            intelligenceContainer.addControl(intelligenceButtons);
                            let intelligenceData = GameGUI.createStackPanel("intelligenceData");
                                intelligenceData.height = intelligenceContainer.height;
                                intelligenceData.widthInPixels = Math.floor(intelligenceContainer.widthInPixels - intelligenceButtons.widthInPixels);
                                intelligenceData.isVertical = true;
                                let intelligenceLabel = GameGUI.createTextBlock("intelligenceLabel");
                                    intelligenceLabel.heightInPixels = Math.floor(intelligenceContainer.heightInPixels / 4);
                                    intelligenceLabel.fontSize = GameGUI.fontSizeSmall;
                                    intelligenceLabel.text = "Intelligence";
                                    //intelligenceLabel.textSmall = "Intelligence";
                                    //intelligenceLabel.textTiny = "Int";
                                intelligenceData.addControl(intelligenceLabel);
                                let intelligenceAbilityModifier = GameGUI.createTextBlock("intelligenceAbilityModifier");
                                    intelligenceAbilityModifier.height = GameGUI.fontSize;
                                    intelligenceAbilityModifier.text = "0";
                                intelligenceData.addControl(intelligenceAbilityModifier);
                                let intelligenceAbilityScore = GameGUI.createInputText("intelligenceAbilityScore");
                                    intelligenceAbilityScore.heightInPixels = Math.floor(intelligenceContainer.heightInPixels / 4);
                                    intelligenceAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                    intelligenceAbilityScore.text = "10";
                                    intelligenceAbilityScore.isEnabled = false;
                                intelligenceData.addControl(intelligenceAbilityScore);
                            intelligenceContainer.addControl(intelligenceData);
                        colARowAColA.addControl(intelligenceContainer);
                        let wisdomContainer = GameGUI.createStackPanel("wisdomContainer");
                            wisdomContainer.heightInPixels = Math.floor(colARowAColA.heightInPixels / 6);
                            wisdomContainer.width = colARowAColA.width;
                            wisdomContainer.isVertical = false;
                            let wisdomButtons = GameGUI.createStackPanel("wisdomButtons");
                                wisdomButtons.height = wisdomContainer.height;
                                wisdomButtons.widthInPixels = Math.floor(wisdomContainer.heightInPixels / 2);
                                wisdomButtons.isVeritcal = true;
                                let wisdomIncButton = GameGUI.createImageButton("wisdomInc", "+");
                                    wisdomIncButton.heightInPixels = Math.floor(wisdomButtons.heightInPixels / 2);
                                    wisdomIncButton.width = wisdomButtons.width;
                                wisdomButtons.addControl(wisdomIncButton);
                                let wisdomDecButton = GameGUI.createImageButton("wisdomDec", "-");
                                    wisdomDecButton.heightInPixels = Math.floor(wisdomButtons.heightInPixels / 2);
                                    wisdomDecButton.width = wisdomButtons.width;
                                wisdomButtons.addControl(wisdomDecButton);
                            wisdomContainer.addControl(wisdomButtons);
                            let wisdomData = GameGUI.createStackPanel("wisdomData");
                                wisdomData.height = wisdomContainer.height;
                                wisdomData.widthInPixels = Math.floor(wisdomContainer.widthInPixels - wisdomButtons.widthInPixels);
                                wisdomData.isVertical = true;
                                let wisdomLabel = GameGUI.createTextBlock("wisdomLabel");
                                    wisdomLabel.heightInPixels = Math.floor(wisdomContainer.heightInPixels / 4);
                                    wisdomLabel.fontSize = GameGUI.fontSizeSmall;
                                    wisdomLabel.text = "Wisdom";
                                    //wisdomLabel.textSmall = "Wisdom";
                                    //wisdomLabel.textTiny = "Wis";
                                wisdomData.addControl(wisdomLabel);
                                let wisdomAbilityModifier = GameGUI.createTextBlock("wisdomAbilityModifier");
                                    wisdomAbilityModifier.height = GameGUI.fontSize;
                                    wisdomAbilityModifier.text = "0";
                                wisdomData.addControl(wisdomAbilityModifier);
                                let wisdomAbilityScore = GameGUI.createInputText("wisdomAbilityScore");
                                    wisdomAbilityScore.heightInPixels = Math.floor(wisdomContainer.heightInPixels / 4);
                                    wisdomAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                    wisdomAbilityScore.text = "10";
                                    wisdomAbilityScore.isEnabled = false;
                                wisdomData.addControl(wisdomAbilityScore);
                            wisdomContainer.addControl(wisdomData);
                        colARowAColA.addControl(wisdomContainer);
                        let charismaContainer = GameGUI.createStackPanel("charismaContainer");
                            charismaContainer.heightInPixels = Math.floor(colARowAColA.heightInPixels / 6);
                            charismaContainer.width = colARowAColA.width;
                            charismaContainer.isVertical = false;
                            let charismaButtons = GameGUI.createStackPanel("charismaButtons");
                                charismaButtons.height = charismaContainer.height;
                                charismaButtons.widthInPixels = Math.floor(charismaContainer.heightInPixels / 2);
                                charismaButtons.isVeritcal = true;
                                let charismaIncButton = GameGUI.createImageButton("charismaInc", "+");
                                    charismaIncButton.heightInPixels = Math.floor(charismaButtons.heightInPixels / 2);
                                    charismaIncButton.width = charismaButtons.width;
                                charismaButtons.addControl(charismaIncButton);
                                let charismaDecButton = GameGUI.createImageButton("charismaDec", "-");
                                    charismaDecButton.heightInPixels = Math.floor(charismaButtons.heightInPixels / 2);
                                    charismaDecButton.width = charismaButtons.width;
                                charismaButtons.addControl(charismaDecButton);
                            charismaContainer.addControl(charismaButtons);
                            let charismaData = GameGUI.createStackPanel("charismaData");
                                charismaData.height = charismaContainer.height;
                                charismaData.widthInPixels = Math.floor(charismaContainer.widthInPixels - charismaButtons.widthInPixels);
                                charismaData.isVertical = true;
                                let charismaLabel = GameGUI.createTextBlock("charismaLabel");
                                    charismaLabel.heightInPixels = Math.floor(charismaContainer.heightInPixels / 4);
                                    charismaLabel.fontSize = GameGUI.fontSizeSmall;
                                    charismaLabel.text = "Charisma";
                                    //charismaLabel.textSmall = "Charisma";
                                    //charismaLabel.textTiny = "Cha";
                                charismaData.addControl(charismaLabel);
                                let charismaAbilityModifier = GameGUI.createTextBlock("charismaAbilityModifier");
                                    charismaAbilityModifier.height = GameGUI.fontSize;
                                    charismaAbilityModifier.text = "0";
                                charismaData.addControl(charismaAbilityModifier);
                                let charismaAbilityScore = GameGUI.createInputText("charismaAbilityScore");
                                    charismaAbilityScore.heightInPixels = Math.floor(charismaContainer.heightInPixels / 4);
                                    charismaAbilityScore.fontSize = GameGUI.fontSizeSmall;
                                    charismaAbilityScore.text = "10";
                                    charismaAbilityScore.isEnabled = false;
                                charismaData.addControl(charismaAbilityScore);
                            charismaContainer.addControl(charismaData);
                        colARowAColA.addControl(charismaContainer);
                    colARowA.addControl(colARowAColA);
                    let colARowAColB = GameGUI.createStackPanel("colAColB");
                        colARowAColB.height = colARowA.height;
                        colARowAColB.widthInPixels = Math.floor(colARowA.widthInPixels / 2);
                        colARowAColB.isVertical = true;
                        let inspirationContainer = GameGUI.createStackPanel("inspirationContainer");
                            inspirationContainer.heightInPixels = Math.floor(colARowAColB.heightInPixels / 12);
                            inspirationContainer.width = colARowAColB.width;
                            inspirationContainer.isVertical = false;
                            let inspirationScore = GameGUI.createTextBlock("inspirationScore");
                                inspirationScore.height = inspirationContainer.height;
                                inspirationScore.width = inspirationScore.height;
                                inspirationScore.text = "0";
                            inspirationContainer.addControl(inspirationScore);
                            let inspirationLabel = GameGUI.createTextBlock("inspirationLabel");
                                inspirationLabel.height = inspirationContainer.height;
                                inspirationLabel.widthInPixels = Math.floor(inspirationContainer.widthInPixels - inspirationScore.widthInPixels);
                                inspirationLabel.fontSize = GameGUI.fontSizeSmall;
                                inspirationLabel.text = "Inspiration";
                            inspirationContainer.addControl(inspirationLabel);
                        colARowAColB.addControl(inspirationContainer);
                        let proficiencyBonusContainer = GameGUI.createStackPanel("proficiencyBonusContainer");
                            proficiencyBonusContainer.heightInPixels = Math.floor(colARowAColB.heightInPixels / 12);
                            proficiencyBonusContainer.width = colARowAColB.width;
                            proficiencyBonusContainer.isVertical = false;
                            let proficiencyBonusScore = GameGUI.createTextBlock("proficiencyBonusScore");
                                proficiencyBonusScore.height = proficiencyBonusContainer.height;
                                proficiencyBonusScore.width = proficiencyBonusScore.height;
                                proficiencyBonusScore.text = "0";
                            proficiencyBonusContainer.addControl(proficiencyBonusScore);
                            let proficiencyBonusLabel = GameGUI.createTextBlock("proficiencyBonusLabel");
                                proficiencyBonusLabel.height = proficiencyBonusContainer.height;
                                proficiencyBonusLabel.widthInPixels = Math.floor(proficiencyBonusContainer.widthInPixels - proficiencyBonusScore.widthInPixels);
                                proficiencyBonusLabel.fontSize = GameGUI.fontSizeSmall;
                                proficiencyBonusLabel.text = "Proficiency Bonus";
                            proficiencyBonusContainer.addControl(proficiencyBonusLabel);
                        colARowAColB.addControl(proficiencyBonusContainer);
                        let savingThrowContainer = GameGUI.createStackPanel("savingThrowContainer");
                            savingThrowContainer.heightInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 7);
                            savingThrowContainer.width = colARowAColB.width;
                            savingThrowContainer.isVertical = true;
                            let sTCStrengthContainer = GameGUI.createStackPanel("savingThrowContainerStrengthContainer");
                                sTCStrengthContainer.height = GameGUI.fontSizeSmall;
                                sTCStrengthContainer.width = savingThrowContainer.width;
                                sTCStrengthContainer.isVertical = false;
                                let sTCStrengthCheckbox = GameGUI.createCheckbox("savingThrowContainerStrengthCheckbox");
                                    sTCStrengthCheckbox.width = GameGUI.fontSizeSmall;
                                    sTCStrengthCheckbox.height = GameGUI.fontSizeSmall;
                                    sTCStrengthCheckbox.isEnabled = false;
                                sTCStrengthContainer.addControl(sTCStrengthCheckbox);
                                let sTCStrengthField = GameGUI.createInputText("savingThrowContainerStrengthField");
                                    sTCStrengthField.fontSize = GameGUI.fontSizeSmall;
                                    sTCStrengthField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sTCStrengthField.text = "0";
                                    sTCStrengthField.isEnabled = false;
                                sTCStrengthContainer.addControl(sTCStrengthField);
                                let sTCStrengthLabel = GameGUI.createTextBlock("savingThrowContainerStrengthLabel");
                                    sTCStrengthLabel.width = sTCStrengthContainer.width;
                                    sTCStrengthLabel.fontSize = GameGUI.fontSizeSmall;
                                    sTCStrengthLabel.text = "Strength";
                                    //sTCStrengthLabel.textSmall = "Strength";
                                    //sTCStrengthLabel.textTiny = "Str";
                                    sTCStrengthLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sTCStrengthContainer.addControl(sTCStrengthLabel);
                            savingThrowContainer.addControl(sTCStrengthContainer);
                            let sTCDexterityContainer = GameGUI.createStackPanel("savingThrowContainerDexterityContainer");
                                sTCDexterityContainer.height = GameGUI.fontSizeSmall;
                                sTCDexterityContainer.width = savingThrowContainer.width;
                                sTCDexterityContainer.isVertical = false;
                                let sTCDexterityCheckbox = GameGUI.createCheckbox("savingThrowContainerDexterityCheckbox");
                                    sTCDexterityCheckbox.width = GameGUI.fontSizeSmall;
                                    sTCDexterityCheckbox.height = GameGUI.fontSizeSmall;
                                    sTCDexterityCheckbox.isEnabled = false;
                                sTCDexterityContainer.addControl(sTCDexterityCheckbox);
                                let sTCDexterityField = GameGUI.createInputText("savingThrowContainerDexterityField");
                                    sTCDexterityField.fontSize = GameGUI.fontSizeSmall;
                                    sTCDexterityField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sTCDexterityField.text = "0";
                                    sTCDexterityField.isEnabled = false;
                                sTCDexterityContainer.addControl(sTCDexterityField);
                                let sTCDexterityLabel = GameGUI.createTextBlock("savingThrowContainerDexterityLabel");
                                    sTCDexterityLabel.width = sTCDexterityContainer.width;
                                    sTCDexterityLabel.fontSize = GameGUI.fontSizeSmall;
                                    sTCDexterityLabel.text = "Dexterity";
                                    //sTCDexterityLabel.textSmall = "Dexterity";
                                    //sTCDexterityLabel.textTiny = "Dex";
                                    sTCDexterityLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sTCDexterityContainer.addControl(sTCDexterityLabel);
                            savingThrowContainer.addControl(sTCDexterityContainer);
                            let sTCConstitutionContainer = GameGUI.createStackPanel("savingThrowContainerConstitutionContainer");
                                sTCConstitutionContainer.height = GameGUI.fontSizeSmall;
                                sTCConstitutionContainer.width = savingThrowContainer.width;
                                sTCConstitutionContainer.isVertical = false;
                                let sTCConstitutionCheckbox = GameGUI.createCheckbox("savingThrowContainerConstitutionCheckbox");
                                    sTCConstitutionCheckbox.width = GameGUI.fontSizeSmall;
                                    sTCConstitutionCheckbox.height = GameGUI.fontSizeSmall;
                                    sTCConstitutionCheckbox.isEnabled = false;
                                sTCConstitutionContainer.addControl(sTCConstitutionCheckbox);
                                let sTCConstitutionField = GameGUI.createInputText("savingThrowContainerConstitutionField");
                                    sTCConstitutionField.fontSize = GameGUI.fontSizeSmall;
                                    sTCConstitutionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sTCConstitutionField.text = "0";
                                    sTCConstitutionField.isEnabled = false;
                                sTCConstitutionContainer.addControl(sTCConstitutionField);
                                let sTCConstitutionLabel = GameGUI.createTextBlock("savingThrowContainerConstitutionLabel");
                                    sTCConstitutionLabel.width = sTCConstitutionContainer.width;
                                    sTCConstitutionLabel.fontSize = GameGUI.fontSizeSmall;
                                    sTCConstitutionLabel.text = "Constitution";
                                    //sTCConstitutionLabel.textSmall = "Constitution";
                                    //sTCConstitutionLabel.textTiny = "Con";
                                    sTCConstitutionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sTCConstitutionContainer.addControl(sTCConstitutionLabel);
                            savingThrowContainer.addControl(sTCConstitutionContainer);
                            let sTCIntelligenceContainer = GameGUI.createStackPanel("savingThrowContainerIntelligenceContainer");
                                sTCIntelligenceContainer.height = GameGUI.fontSizeSmall;
                                sTCIntelligenceContainer.width = savingThrowContainer.width;
                                sTCIntelligenceContainer.isVertical = false;
                                let sTCIntelligenceCheckbox = GameGUI.createCheckbox("savingThrowContainerIntelligenceCheckbox");
                                    sTCIntelligenceCheckbox.width = GameGUI.fontSizeSmall;
                                    sTCIntelligenceCheckbox.height = GameGUI.fontSizeSmall;
                                    sTCIntelligenceCheckbox.isEnabled = false;
                                sTCIntelligenceContainer.addControl(sTCIntelligenceCheckbox);
                                let sTCIntelligenceField = GameGUI.createInputText("savingThrowContainerIntelligenceField");
                                    sTCIntelligenceField.fontSize = GameGUI.fontSizeSmall;
                                    sTCIntelligenceField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sTCIntelligenceField.text = "0";
                                    sTCIntelligenceField.isEnabled = false;
                                sTCIntelligenceContainer.addControl(sTCIntelligenceField);
                                let sTCIntelligenceLabel = GameGUI.createTextBlock("savingThrowContainerIntelligenceLabel");
                                    sTCIntelligenceLabel.width = sTCIntelligenceContainer.width;
                                    sTCIntelligenceLabel.fontSize = GameGUI.fontSizeSmall;
                                    sTCIntelligenceLabel.text = "Intelligence";
                                    //sTCIntelligenceLabel.textSmall = "Intelligence";
                                    //sTCIntelligenceLabel.textTiny = "Int";
                                    sTCIntelligenceLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sTCIntelligenceContainer.addControl(sTCIntelligenceLabel);
                            savingThrowContainer.addControl(sTCIntelligenceContainer);
                            let sTCWisdomContainer = GameGUI.createStackPanel("savingThrowContainerWisdomContainer");
                                sTCWisdomContainer.height = GameGUI.fontSizeSmall;
                                sTCWisdomContainer.width = savingThrowContainer.width;
                                sTCWisdomContainer.isVertical = false;
                                let sTCWisdomCheckbox = GameGUI.createCheckbox("savingThrowContainerWisdomCheckbox");
                                    sTCWisdomCheckbox.width = GameGUI.fontSizeSmall;
                                    sTCWisdomCheckbox.height = GameGUI.fontSizeSmall;
                                    sTCWisdomCheckbox.isEnabled = false;
                                sTCWisdomContainer.addControl(sTCWisdomCheckbox);
                                let sTCWisdomField = GameGUI.createInputText("savingThrowContainerWisdomField");
                                    sTCWisdomField.fontSize = GameGUI.fontSizeSmall;
                                    sTCWisdomField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sTCWisdomField.text = "0";
                                    sTCWisdomField.isEnabled = false;
                                sTCWisdomContainer.addControl(sTCWisdomField);
                                let sTCWisdomLabel = GameGUI.createTextBlock("savingThrowContainerWisdomLabel");
                                    sTCWisdomLabel.width = sTCWisdomContainer.width;
                                    sTCWisdomLabel.fontSize = GameGUI.fontSizeSmall;
                                    sTCWisdomLabel.text = "Wisdom";
                                    //sTCWisdomLabel.textSmall = "Wisdom";
                                    //sTCWisdomLabel.textTiny = "Wis";
                                    sTCWisdomLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sTCWisdomContainer.addControl(sTCWisdomLabel);
                            savingThrowContainer.addControl(sTCWisdomContainer);
                            let sTCCharismaContainer = GameGUI.createStackPanel("savingThrowContainerCharismaContainer");
                                sTCCharismaContainer.height = GameGUI.fontSizeSmall;
                                sTCCharismaContainer.width = savingThrowContainer.width;
                                sTCCharismaContainer.isVertical = false;
                                let sTCCharismaCheckbox = GameGUI.createCheckbox("savingThrowContainerCharismaCheckbox");
                                    sTCCharismaCheckbox.width = GameGUI.fontSizeSmall;
                                    sTCCharismaCheckbox.height = GameGUI.fontSizeSmall;
                                    sTCCharismaCheckbox.isEnabled = false;
                                sTCCharismaContainer.addControl(sTCCharismaCheckbox);
                                let sTCCharismaField = GameGUI.createInputText("savingThrowContainerCharismaField");
                                    sTCCharismaField.fontSize = GameGUI.fontSizeSmall;
                                    sTCCharismaField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sTCCharismaField.text = "0";
                                    sTCCharismaField.isEnabled = false;
                                sTCCharismaContainer.addControl(sTCCharismaField);
                                let sTCCharismaLabel = GameGUI.createTextBlock("savingThrowContainerCharismaLabel");
                                    sTCCharismaLabel.width = sTCCharismaContainer.width;
                                    sTCCharismaLabel.fontSize = GameGUI.fontSizeSmall;
                                    sTCCharismaLabel.text = "Charisma";
                                    //sTCCharismaLabel.textSmall = "Charisma";
                                    //sTCCharismaLabel.textTiny = "Cha";
                                    sTCCharismaLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sTCCharismaContainer.addControl(sTCCharismaLabel);
                            savingThrowContainer.addControl(sTCCharismaContainer);
                            let savingThrowLabel = GameGUI.createTextBlock("savingThrowLabel");
                                savingThrowLabel.height = GameGUI.fontSizeSmall;
                                savingThrowLabel.width = savingThrowContainer.width;
                                savingThrowLabel.fontSize = GameGUI.fontSizeSmall;
                                savingThrowLabel.text = "Saving Throws";
                            savingThrowContainer.addControl(savingThrowLabel);
                        colARowAColB.addControl(savingThrowContainer);
                        let skillContainer = GameGUI.createStackPanel("skillContainer");
                            skillContainer.heightInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 18);
                            skillContainer.width = colARowAColB.width;
                            skillContainer.isVertical = true;
                            let sCAcrobaticsContainer = GameGUI.createStackPanel("skillContainerAcrobaticsContainer");
                                sCAcrobaticsContainer.height = GameGUI.fontSizeSmall;
                                sCAcrobaticsContainer.width = skillContainer.width;
                                sCAcrobaticsContainer.isVertical = false;
                                let sCAcrobaticsCheckbox = GameGUI.createCheckbox("skillContainerAcrobaticsCheckbox");
                                    sCAcrobaticsCheckbox.width = GameGUI.fontSizeSmall;
                                    sCAcrobaticsCheckbox.height = GameGUI.fontSizeSmall;
                                    sCAcrobaticsCheckbox.isEnabled = false;
                                sCAcrobaticsContainer.addControl(sCAcrobaticsCheckbox);
                                let sCAcrobaticsField = GameGUI.createInputText("skillContainerAcrobaticsField");
                                    sCAcrobaticsField.fontSize = GameGUI.fontSizeSmall;
                                    sCAcrobaticsField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCAcrobaticsField.text = "0";
                                    sCAcrobaticsField.isEnabled = false;
                                sCAcrobaticsContainer.addControl(sCAcrobaticsField);
                                let sCAcrobaticsLabel = GameGUI.createTextBlock("skillContainerAcrobaticsLabel");
                                    sCAcrobaticsLabel.width = sCAcrobaticsContainer.width;
                                    sCAcrobaticsLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCAcrobaticsLabel.text = "Acrobatics";
                                    sCAcrobaticsLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCAcrobaticsContainer.addControl(sCAcrobaticsLabel);
                            skillContainer.addControl(sCAcrobaticsContainer);
                            let sCAnimalHandlingContainer = GameGUI.createStackPanel("skillContainerAnimalHandlingContainer");
                                sCAnimalHandlingContainer.height = GameGUI.fontSizeSmall;
                                sCAnimalHandlingContainer.width = skillContainer.width;
                                sCAnimalHandlingContainer.isVertical = false;
                                let sCAnimalHandlingCheckbox = GameGUI.createCheckbox("skillContainerAnimalHandlingCheckbox");
                                    sCAnimalHandlingCheckbox.width = GameGUI.fontSizeSmall;
                                    sCAnimalHandlingCheckbox.height = GameGUI.fontSizeSmall;
                                    sCAnimalHandlingCheckbox.isEnabled = false;
                                sCAnimalHandlingContainer.addControl(sCAnimalHandlingCheckbox);
                                let sCAnimalHandlingField = GameGUI.createInputText("skillContainerAnimalHandlingField");
                                    sCAnimalHandlingField.fontSize = GameGUI.fontSizeSmall;
                                    sCAnimalHandlingField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCAnimalHandlingField.text = "0";
                                    sCAnimalHandlingField.isEnabled = false;
                                sCAnimalHandlingContainer.addControl(sCAnimalHandlingField);
                                let sCAnimalHandlingLabel = GameGUI.createTextBlock("skillContainerAnimalHandlingLabel");
                                    sCAnimalHandlingLabel.width = sCAnimalHandlingContainer.width;
                                    sCAnimalHandlingLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCAnimalHandlingLabel.text = "Animal Handling";
                                    sCAnimalHandlingLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCAnimalHandlingContainer.addControl(sCAnimalHandlingLabel);
                            skillContainer.addControl(sCAnimalHandlingContainer);
                            let sCArcanaContainer = GameGUI.createStackPanel("skillContainerArcanaContainer");
                                sCArcanaContainer.height = GameGUI.fontSizeSmall;
                                sCArcanaContainer.width = skillContainer.width;
                                sCArcanaContainer.isVertical = false;
                                let sCArcanaCheckbox = GameGUI.createCheckbox("skillContainerArcanaCheckbox");
                                    sCArcanaCheckbox.width = GameGUI.fontSizeSmall;
                                    sCArcanaCheckbox.height = GameGUI.fontSizeSmall;
                                    sCArcanaCheckbox.isEnabled = false;
                                sCArcanaContainer.addControl(sCArcanaCheckbox);
                                let sCArcanaField = GameGUI.createInputText("skillContainerArcanaField");
                                    sCArcanaField.fontSize = GameGUI.fontSizeSmall;
                                    sCArcanaField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCArcanaField.text = "0";
                                    sCArcanaField.isEnabled = false;
                                sCArcanaContainer.addControl(sCArcanaField);
                                let sCArcanaLabel = GameGUI.createTextBlock("skillContainerArcanaLabel");
                                    sCArcanaLabel.width = sCArcanaContainer.width;
                                    sCArcanaLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCArcanaLabel.text = "Arcana";
                                    sCArcanaLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCArcanaContainer.addControl(sCArcanaLabel);
                            skillContainer.addControl(sCArcanaContainer);
                            let sCAthleticsContainer = GameGUI.createStackPanel("skillContainerAthleticsContainer");
                                sCAthleticsContainer.height = GameGUI.fontSizeSmall;
                                sCAthleticsContainer.width = skillContainer.width;
                                sCAthleticsContainer.isVertical = false;
                                let sCAthleticsCheckbox = GameGUI.createCheckbox("skillContainerAthleticsCheckbox");
                                    sCAthleticsCheckbox.width = GameGUI.fontSizeSmall;
                                    sCAthleticsCheckbox.height = GameGUI.fontSizeSmall;
                                    sCAthleticsCheckbox.isEnabled = false;
                                sCAthleticsContainer.addControl(sCAthleticsCheckbox);
                                let sCAthleticsField = GameGUI.createInputText("skillContainerAthleticsField");
                                    sCAthleticsField.fontSize = GameGUI.fontSizeSmall;
                                    sCAthleticsField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCAthleticsField.text = "0";
                                    sCAthleticsField.isEnabled = false;
                                sCAthleticsContainer.addControl(sCAthleticsField);
                                let sCAthleticsLabel = GameGUI.createTextBlock("skillContainerAthleticsLabel");
                                    sCAthleticsLabel.width = sCAthleticsContainer.width;
                                    sCAthleticsLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCAthleticsLabel.text = "Athletics";
                                    sCAthleticsLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCAthleticsContainer.addControl(sCAthleticsLabel);
                            skillContainer.addControl(sCAthleticsContainer);
                            let sCDeceptionContainer = GameGUI.createStackPanel("skillContainerDeceptionContainer");
                                sCDeceptionContainer.height = GameGUI.fontSizeSmall;
                                sCDeceptionContainer.width = skillContainer.width;
                                sCDeceptionContainer.isVertical = false;
                                let sCDeceptionCheckbox = GameGUI.createCheckbox("skillContainerDeceptionCheckbox");
                                    sCDeceptionCheckbox.width = GameGUI.fontSizeSmall;
                                    sCDeceptionCheckbox.height = GameGUI.fontSizeSmall;
                                    sCDeceptionCheckbox.isEnabled = false;
                                sCDeceptionContainer.addControl(sCDeceptionCheckbox);
                                let sCDeceptionField = GameGUI.createInputText("skillContainerDeceptionField");
                                    sCDeceptionField.fontSize = GameGUI.fontSizeSmall;
                                    sCDeceptionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCDeceptionField.text = "0";
                                    sCDeceptionField.isEnabled = false;
                                sCDeceptionContainer.addControl(sCDeceptionField);
                                let sCDeceptionLabel = GameGUI.createTextBlock("skillContainerDeceptionLabel");
                                    sCDeceptionLabel.width = sCDeceptionContainer.width;
                                    sCDeceptionLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCDeceptionLabel.text = "Deception";
                                    sCDeceptionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCDeceptionContainer.addControl(sCDeceptionLabel);
                            skillContainer.addControl(sCDeceptionContainer);
                            let sCHistoryContainer = GameGUI.createStackPanel("skillContainerHistoryContainer");
                                sCHistoryContainer.height = GameGUI.fontSizeSmall;
                                sCHistoryContainer.width = skillContainer.width;
                                sCHistoryContainer.isVertical = false;
                                let sCHistoryCheckbox = GameGUI.createCheckbox("skillContainerHistoryCheckbox");
                                    sCHistoryCheckbox.width = GameGUI.fontSizeSmall;
                                    sCHistoryCheckbox.height = GameGUI.fontSizeSmall;
                                    sCHistoryCheckbox.isEnabled = false;
                                sCHistoryContainer.addControl(sCHistoryCheckbox);
                                let sCHistoryField = GameGUI.createInputText("skillContainerHistoryField");
                                    sCHistoryField.fontSize = GameGUI.fontSizeSmall;
                                    sCHistoryField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCHistoryField.text = "0";
                                    sCHistoryField.isEnabled = false;
                                sCHistoryContainer.addControl(sCHistoryField);
                                let sCHistoryLabel = GameGUI.createTextBlock("skillContainerHistoryLabel");
                                    sCHistoryLabel.width = sCHistoryContainer.width;
                                    sCHistoryLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCHistoryLabel.text = "History";
                                    sCHistoryLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCHistoryContainer.addControl(sCHistoryLabel);
                            skillContainer.addControl(sCHistoryContainer);
                            let sCInsightContainer = GameGUI.createStackPanel("skillContainerInsightContainer");
                                sCInsightContainer.height = GameGUI.fontSizeSmall;
                                sCInsightContainer.width = skillContainer.width;
                                sCInsightContainer.isVertical = false;
                                let sCInsightCheckbox = GameGUI.createCheckbox("skillContainerInsightCheckbox");
                                    sCInsightCheckbox.width = GameGUI.fontSizeSmall;
                                    sCInsightCheckbox.height = GameGUI.fontSizeSmall;
                                    sCInsightCheckbox.isEnabled = false;
                                sCInsightContainer.addControl(sCInsightCheckbox);
                                let sCInsightField = GameGUI.createInputText("skillContainerInsightField");
                                    sCInsightField.fontSize = GameGUI.fontSizeSmall;
                                    sCInsightField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCInsightField.text = "0";
                                    sCInsightField.isEnabled = false;
                                sCInsightContainer.addControl(sCInsightField);
                                let sCInsightLabel = GameGUI.createTextBlock("skillContainerInsightLabel");
                                    sCInsightLabel.width = sCInsightContainer.width;
                                    sCInsightLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCInsightLabel.text = "Insight";
                                    sCInsightLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCInsightContainer.addControl(sCInsightLabel);
                            skillContainer.addControl(sCInsightContainer);
                            let sCIntimidationContainer = GameGUI.createStackPanel("skillContainerIntimidationContainer");
                                sCIntimidationContainer.height = GameGUI.fontSizeSmall;
                                sCIntimidationContainer.width = skillContainer.width;
                                sCIntimidationContainer.isVertical = false;
                                let sCIntimidationCheckbox = GameGUI.createCheckbox("skillContainerIntimidationCheckbox");
                                    sCIntimidationCheckbox.width = GameGUI.fontSizeSmall;
                                    sCIntimidationCheckbox.height = GameGUI.fontSizeSmall;
                                    sCIntimidationCheckbox.isEnabled = false;
                                sCIntimidationContainer.addControl(sCIntimidationCheckbox);
                                let sCIntimidationField = GameGUI.createInputText("skillContainerIntimidationField");
                                    sCIntimidationField.fontSize = GameGUI.fontSizeSmall;
                                    sCIntimidationField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCIntimidationField.text = "0";
                                    sCIntimidationField.isEnabled = false;
                                sCIntimidationContainer.addControl(sCIntimidationField);
                                let sCIntimidationLabel = GameGUI.createTextBlock("skillContainerIntimidationLabel");
                                    sCIntimidationLabel.width = sCIntimidationContainer.width;
                                    sCIntimidationLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCIntimidationLabel.text = "Intimidation";
                                    sCIntimidationLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCIntimidationContainer.addControl(sCIntimidationLabel);
                            skillContainer.addControl(sCIntimidationContainer);
                            let sCInvestigationContainer = GameGUI.createStackPanel("skillContainerInvestigationContainer");
                                sCInvestigationContainer.height = GameGUI.fontSizeSmall;
                                sCInvestigationContainer.width = skillContainer.width;
                                sCInvestigationContainer.isVertical = false;
                                let sCInvestigationCheckbox = GameGUI.createCheckbox("skillContainerInvestigationCheckbox");
                                    sCInvestigationCheckbox.width = GameGUI.fontSizeSmall;
                                    sCInvestigationCheckbox.height = GameGUI.fontSizeSmall;
                                    sCInvestigationCheckbox.isEnabled = false;
                                sCInvestigationContainer.addControl(sCInvestigationCheckbox);
                                let sCInvestigationField = GameGUI.createInputText("skillContainerInvestigationField");
                                    sCInvestigationField.fontSize = GameGUI.fontSizeSmall;
                                    sCInvestigationField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCInvestigationField.text = "0";
                                    sCInvestigationField.isEnabled = false;
                                sCInvestigationContainer.addControl(sCInvestigationField);
                                let sCInvestigationLabel = GameGUI.createTextBlock("skillContainerInvestigationLabel");
                                    sCInvestigationLabel.width = sCInvestigationContainer.width;
                                    sCInvestigationLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCInvestigationLabel.text = "Investigation";
                                    sCInvestigationLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCInvestigationContainer.addControl(sCInvestigationLabel);
                            skillContainer.addControl(sCInvestigationContainer);
                            let sCMedicineContainer = GameGUI.createStackPanel("skillContainerMedicineContainer");
                                sCMedicineContainer.height = GameGUI.fontSizeSmall;
                                sCMedicineContainer.width = skillContainer.width;
                                sCMedicineContainer.isVertical = false;
                                let sCMedicineCheckbox = GameGUI.createCheckbox("skillContainerMedicineCheckbox");
                                    sCMedicineCheckbox.width = GameGUI.fontSizeSmall;
                                    sCMedicineCheckbox.height = GameGUI.fontSizeSmall;
                                    sCMedicineCheckbox.isEnabled = false;
                                sCMedicineContainer.addControl(sCMedicineCheckbox);
                                let sCMedicineField = GameGUI.createInputText("skillContainerMedicineField");
                                    sCMedicineField.fontSize = GameGUI.fontSizeSmall;
                                    sCMedicineField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCMedicineField.text = "0";
                                    sCMedicineField.isEnabled = false;
                                sCMedicineContainer.addControl(sCMedicineField);
                                let sCMedicineLabel = GameGUI.createTextBlock("skillContainerMedicineLabel");
                                    sCMedicineLabel.width = sCMedicineContainer.width;
                                    sCMedicineLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCMedicineLabel.text = "Medicine";
                                    sCMedicineLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCMedicineContainer.addControl(sCMedicineLabel);
                            skillContainer.addControl(sCMedicineContainer);
                            let sCNatureContainer = GameGUI.createStackPanel("skillContainerNatureContainer");
                                sCNatureContainer.height = GameGUI.fontSizeSmall;
                                sCNatureContainer.width = skillContainer.width;
                                sCNatureContainer.isVertical = false;
                                let sCNatureCheckbox = GameGUI.createCheckbox("skillContainerNatureCheckbox");
                                    sCNatureCheckbox.width = GameGUI.fontSizeSmall;
                                    sCNatureCheckbox.height = GameGUI.fontSizeSmall;
                                    sCNatureCheckbox.isEnabled = false;
                                sCNatureContainer.addControl(sCNatureCheckbox);
                                let sCNatureField = GameGUI.createInputText("skillContainerNatureField");
                                    sCNatureField.fontSize = GameGUI.fontSizeSmall;
                                    sCNatureField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCNatureField.text = "0";
                                    sCNatureField.isEnabled = false;
                                sCNatureContainer.addControl(sCNatureField);
                                let sCNatureLabel = GameGUI.createTextBlock("skillContainerNatureLabel");
                                    sCNatureLabel.width = sCNatureContainer.width;
                                    sCNatureLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCNatureLabel.text = "Nature";
                                    sCNatureLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCNatureContainer.addControl(sCNatureLabel);
                            skillContainer.addControl(sCNatureContainer);
                            let sCPerceptionContainer = GameGUI.createStackPanel("skillContainerPerceptionContainer");
                                sCPerceptionContainer.height = GameGUI.fontSizeSmall;
                                sCPerceptionContainer.width = skillContainer.width;
                                sCPerceptionContainer.isVertical = false;
                                let sCPerceptionCheckbox = GameGUI.createCheckbox("skillContainerPerceptionCheckbox");
                                    sCPerceptionCheckbox.width = GameGUI.fontSizeSmall;
                                    sCPerceptionCheckbox.height = GameGUI.fontSizeSmall;
                                    sCPerceptionCheckbox.isEnabled = false;
                                sCPerceptionContainer.addControl(sCPerceptionCheckbox);
                                let sCPerceptionField = GameGUI.createInputText("skillContainerPerceptionField");
                                    sCPerceptionField.fontSize = GameGUI.fontSizeSmall;
                                    sCPerceptionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCPerceptionField.text = "0";
                                    sCPerceptionField.isEnabled = false;
                                sCPerceptionContainer.addControl(sCPerceptionField);
                                let sCPerceptionLabel = GameGUI.createTextBlock("skillContainerPerceptionLabel");
                                    sCPerceptionLabel.width = sCPerceptionContainer.width;
                                    sCPerceptionLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCPerceptionLabel.text = "Perception";
                                    sCPerceptionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCPerceptionContainer.addControl(sCPerceptionLabel);
                            skillContainer.addControl(sCPerceptionContainer);
                            let sCPerformanceContainer = GameGUI.createStackPanel("skillContainerPerformanceContainer");
                                sCPerformanceContainer.height = GameGUI.fontSizeSmall;
                                sCPerformanceContainer.width = skillContainer.width;
                                sCPerformanceContainer.isVertical = false;
                                let sCPerformanceCheckbox = GameGUI.createCheckbox("skillContainerPerformanceCheckbox");
                                    sCPerformanceCheckbox.width = GameGUI.fontSizeSmall;
                                    sCPerformanceCheckbox.height = GameGUI.fontSizeSmall;
                                    sCPerformanceCheckbox.isEnabled = false;
                                sCPerformanceContainer.addControl(sCPerformanceCheckbox);
                                let sCPerformanceField = GameGUI.createInputText("skillContainerPerformanceField");
                                    sCPerformanceField.fontSize = GameGUI.fontSizeSmall;
                                    sCPerformanceField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCPerformanceField.text = "0";
                                    sCPerformanceField.isEnabled = false;
                                sCPerformanceContainer.addControl(sCPerformanceField);
                                let sCPerformanceLabel = GameGUI.createTextBlock("skillContainerPerformanceLabel");
                                    sCPerformanceLabel.width = sCPerformanceContainer.width;
                                    sCPerformanceLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCPerformanceLabel.text = "Performance";
                                    sCPerformanceLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCPerformanceContainer.addControl(sCPerformanceLabel);
                            skillContainer.addControl(sCPerformanceContainer);
                            let sCPersuasionContainer = GameGUI.createStackPanel("skillContainerPersuasionContainer");
                                sCPersuasionContainer.height = GameGUI.fontSizeSmall;
                                sCPersuasionContainer.width = skillContainer.width;
                                sCPersuasionContainer.isVertical = false;
                                let sCPersuasionCheckbox = GameGUI.createCheckbox("skillContainerPersuasionCheckbox");
                                    sCPersuasionCheckbox.width = GameGUI.fontSizeSmall;
                                    sCPersuasionCheckbox.height = GameGUI.fontSizeSmall;
                                    sCPersuasionCheckbox.isEnabled = false;
                                sCPersuasionContainer.addControl(sCPersuasionCheckbox);
                                let sCPersuasionField = GameGUI.createInputText("skillContainerPersuasionField");
                                    sCPersuasionField.fontSize = GameGUI.fontSizeSmall;
                                    sCPersuasionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCPersuasionField.text = "0";
                                    sCPersuasionField.isEnabled = false;
                                sCPersuasionContainer.addControl(sCPersuasionField);
                                let sCPersuasionLabel = GameGUI.createTextBlock("skillContainerPersuasionLabel");
                                    sCPersuasionLabel.width = sCPersuasionContainer.width;
                                    sCPersuasionLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCPersuasionLabel.text = "Persuasion";
                                    sCPersuasionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCPersuasionContainer.addControl(sCPersuasionLabel);
                            skillContainer.addControl(sCPersuasionContainer);
                            let sCReligionContainer = GameGUI.createStackPanel("skillContainerReligionContainer");
                                sCReligionContainer.height = GameGUI.fontSizeSmall;
                                sCReligionContainer.width = skillContainer.width;
                                sCReligionContainer.isVertical = false;
                                let sCReligionCheckbox = GameGUI.createCheckbox("skillContainerReligionCheckbox");
                                    sCReligionCheckbox.width = GameGUI.fontSizeSmall;
                                    sCReligionCheckbox.height = GameGUI.fontSizeSmall;
                                    sCReligionCheckbox.isEnabled = false;
                                sCReligionContainer.addControl(sCReligionCheckbox);
                                let sCReligionField = GameGUI.createInputText("skillContainerReligionField");
                                    sCReligionField.fontSize = GameGUI.fontSizeSmall;
                                    sCReligionField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCReligionField.text = "0";
                                    sCReligionField.isEnabled = false;
                                sCReligionContainer.addControl(sCReligionField);
                                let sCReligionLabel = GameGUI.createTextBlock("skillContainerReligionLabel");
                                    sCReligionLabel.width = sCReligionContainer.width;
                                    sCReligionLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCReligionLabel.text = "Religion";
                                    sCReligionLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCReligionContainer.addControl(sCReligionLabel);
                            skillContainer.addControl(sCReligionContainer);
                            let sCSleightOfHandContainer = GameGUI.createStackPanel("skillContainerSleightOfHandContainer");
                                sCSleightOfHandContainer.height = GameGUI.fontSizeSmall;
                                sCSleightOfHandContainer.width = skillContainer.width;
                                sCSleightOfHandContainer.isVertical = false;
                                let sCSleightOfHandCheckbox = GameGUI.createCheckbox("skillContainerSleightOfHandCheckbox");
                                    sCSleightOfHandCheckbox.width = GameGUI.fontSizeSmall;
                                    sCSleightOfHandCheckbox.height = GameGUI.fontSizeSmall;
                                    sCSleightOfHandCheckbox.isEnabled = false;
                                sCSleightOfHandContainer.addControl(sCSleightOfHandCheckbox);
                                let sCSleightOfHandField = GameGUI.createInputText("skillContainerSleightOfHandField");
                                    sCSleightOfHandField.fontSize = GameGUI.fontSizeSmall;
                                    sCSleightOfHandField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCSleightOfHandField.text = "0";
                                    sCSleightOfHandField.isEnabled = false;
                                sCSleightOfHandContainer.addControl(sCSleightOfHandField);
                                let sCSleightOfHandLabel = GameGUI.createTextBlock("skillContainerSleightOfHandLabel");
                                    sCSleightOfHandLabel.width = sCSleightOfHandContainer.width;
                                    sCSleightOfHandLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCSleightOfHandLabel.text = "Sleight of Hand";
                                    sCSleightOfHandLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCSleightOfHandContainer.addControl(sCSleightOfHandLabel);
                            skillContainer.addControl(sCSleightOfHandContainer);
                            let sCStealthContainer = GameGUI.createStackPanel("skillContainerStealthContainer");
                                sCStealthContainer.height = GameGUI.fontSizeSmall;
                                sCStealthContainer.width = skillContainer.width;
                                sCStealthContainer.isVertical = false;
                                let sCStealthCheckbox = GameGUI.createCheckbox("skillContainerStealthCheckbox");
                                    sCStealthCheckbox.width = GameGUI.fontSizeSmall;
                                    sCStealthCheckbox.height = GameGUI.fontSizeSmall;
                                    sCStealthCheckbox.isEnabled = false;
                                sCStealthContainer.addControl(sCStealthCheckbox);
                                let sCStealthField = GameGUI.createInputText("skillContainerStealthField");
                                    sCStealthField.fontSize = GameGUI.fontSizeSmall;
                                    sCStealthField.widthInPixels = Math.floor(GameGUI.fontSizeSmallInPixels * 3);
                                    sCStealthField.text = "0";
                                    sCStealthField.isEnabled = false;
                                sCStealthContainer.addControl(sCStealthField);
                                let sCStealthLabel = GameGUI.createTextBlock("skillContainerStealthLabel");
                                    sCStealthLabel.width = sCStealthContainer.width;
                                    sCStealthLabel.fontSize = GameGUI.fontSizeSmall;
                                    sCStealthLabel.text = "Stealth";
                                    sCStealthLabel.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                                sCStealthContainer.addControl(sCStealthLabel);
                            skillContainer.addControl(sCStealthContainer);
                            let skillLabel = GameGUI.createTextBlock("skillLabel");
                                skillLabel.height = GameGUI.fontSizeSmall;
                                skillLabel.width = skillContainer.width;
                                skillLabel.fontSize = GameGUI.fontSizeSmall;
                                skillLabel.text = "Skills";
                            skillContainer.addControl(skillLabel);
                        colARowAColB.addControl(skillContainer);                            
                    colARowA.addControl(colARowAColB);
                colA.addControl(colARowA);
                let colARowB = GameGUI.createStackPanel("colARowB");
                    colARowB.heightInPixels = Math.floor((colA.heightInPixels / 7) * 0.5);
                    colARowB.width = colA.width;
                    colARowB.isVertical = false;
                    let passiveWisdomScore = GameGUI.createTextBlock("passiveWisdomScore");
                        passiveWisdomScore.height = colARowB.height;
                        passiveWisdomScore.width = passiveWisdomScore.height;
                        passiveWisdomScore.text = "0";
                    colARowB.addControl(passiveWisdomScore);
                    let passiveWisdomLabel = GameGUI.createTextBlock("passiveWisdomLabel");
                        passiveWisdomLabel.height = colARowB.height;
                        passiveWisdomLabel.widthInPixels = Math.floor(colARowB.widthInPixels - passiveWisdomScore.widthInPixels);
                        passiveWisdomLabel.fontSize = GameGUI.fontSizeSmall;
                        passiveWisdomLabel.text = "Passive Wisdom (Perception)";
                        //passiveWisdomLabel.textSmall = "Passive Wisdom";
                        //passiveWisdomLabel.textTiny = "Pass. Wis";
                        passiveWisdomLabel.color = GameGUI.color;
                    colARowB.addControl(passiveWisdomLabel);
                colA.addControl(colARowB);
                let proficienciesAndLanguagesContainer = GameGUI.createStackPanel("proficienciesAndLanguagesContainer");
                    proficienciesAndLanguagesContainer.heightInPixels = Math.floor((colA.heightInPixels / 7) * 2.25);
                    proficienciesAndLanguagesContainer.width = colA.width;
                    let proficienciesAndLanguagesField = GameGUI.createTextBlock("proficienciesAndLanguagesField");
                        proficienciesAndLanguagesField.heightInPixels = Math.floor(proficienciesAndLanguagesContainer.heightInPixels - GameGUI.fontSizeSmallInPixels);
                        proficienciesAndLanguagesField.width = proficienciesAndLanguagesContainer.width;
                        proficienciesAndLanguagesField.fontSize = GameGUI.fontSizeSmall;
                        proficienciesAndLanguagesField.textVerticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP;
                        proficienciesAndLanguagesField.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
                    proficienciesAndLanguagesContainer.addControl(proficienciesAndLanguagesField);
                    let proficienciesAndLanguagesLabel = GameGUI.createTextBlock("proficienciesAndLanguagesLabel");
                        proficienciesAndLanguagesLabel.height = GameGUI.fontSizeSmall;
                        proficienciesAndLanguagesLabel.width = proficienciesAndLanguagesContainer.width;
                        proficienciesAndLanguagesLabel.fontSize = GameGUI.fontSizeSmall;
                        proficienciesAndLanguagesLabel.text = "Other Proficiencies and Languages";
                        //proficienciesAndLanguagesField.textSmall = "Proficiencies and Languages";
                        //proficienciesAndLanguagesField.textTiny = "Profs & Langs";
                    proficienciesAndLanguagesContainer.addControl(proficienciesAndLanguagesLabel);
                colA.addControl(proficienciesAndLanguagesContainer);
            body.addControl(colA);
            let colB = GameGUI.createStackPanel("colB");
                colB.height = body.height;
                colB.widthInPixels = Math.floor(body.widthInPixels / 3);
                colB.isVertical = true;
            body.addControl(colB);
            let colC = GameGUI.createStackPanel("colC");
                colC.height = body.height;
                colC.widthInPixels = Math.floor(body.widthInPixels / 3);
                colC.isVertical = true;
            body.addControl(colC);
        CharacterStatsGameGUI.bodyContainer.addControl(body);

        CharacterStatsGameGUI.header = header;
        CharacterStatsGameGUI.nameContainer = hNameContainer;
        CharacterStatsGameGUI.nameField = hNCField;
        CharacterStatsGameGUI.nameLabel = hNCLabel;
        CharacterStatsGameGUI.infoContainer = hInfoContainer;
        CharacterStatsGameGUI.infoTop = hICTop;
        CharacterStatsGameGUI.classContainer = hICTClassContainer;
        CharacterStatsGameGUI.classField = hICTCCText;
        CharacterStatsGameGUI.classLabel = hICTCCLabel;
        CharacterStatsGameGUI.backgroundContainer = hICTBGgContainer;
        CharacterStatsGameGUI.backgroundField = hICTBGCText;
        CharacterStatsGameGUI.backgroundLabel = hICTBGCLabel;
        CharacterStatsGameGUI.accountContainer = hICTAccNameContainer;
        CharacterStatsGameGUI.accountField = hICTANCText;
        CharacterStatsGameGUI.accountLabel = hICTANCLabel;
        CharacterStatsGameGUI.infoBottom = hICBot;
        CharacterStatsGameGUI.raceContainer = hICBRaceContainer;
        CharacterStatsGameGUI.raceField = hICBRCText;
        CharacterStatsGameGUI.raceLabel = hICBRCLabel;
        CharacterStatsGameGUI.alignmentContainer = hICBAlignmentContainer;
        CharacterStatsGameGUI.alignmentField = hICBACText;
        CharacterStatsGameGUI.alignmentLabel = hICBACLabel;
        CharacterStatsGameGUI.xpContainer = hICBXPContainer;
        CharacterStatsGameGUI.xpField = hICBXPCText;
        CharacterStatsGameGUI.xpLabel = hICBXPCLabel;
        CharacterStatsGameGUI.body = body;
        CharacterStatsGameGUI.colA = colA;
        CharacterStatsGameGUI.colARowA = colARowA;
        CharacterStatsGameGUI.colARowAColA = colARowAColA;
        CharacterStatsGameGUI.strengthContainer = strengthContainer;
        CharacterStatsGameGUI.strengthButtons = strengthButtons;
        CharacterStatsGameGUI.strengthIncButton = strengthIncButton;
        CharacterStatsGameGUI.strengthDecButton = strengthDecButton;
        CharacterStatsGameGUI.strengthData = strengthData;
        CharacterStatsGameGUI.strengthLabel = strengthLabel;
        CharacterStatsGameGUI.strengthAbilityModifier = strengthAbilityModifier;
        CharacterStatsGameGUI.strengthAbilityField = strengthAbilityScore;
        CharacterStatsGameGUI.dexterityContainer = dexterityContainer;
        CharacterStatsGameGUI.dexterityButtons = dexterityButtons;
        CharacterStatsGameGUI.dexterityIncButton = dexterityIncButton;
        CharacterStatsGameGUI.dexterityDecButton = dexterityDecButton;
        CharacterStatsGameGUI.dexterityData = dexterityData;
        CharacterStatsGameGUI.dexterityLabel = dexterityLabel;
        CharacterStatsGameGUI.dexterityAbilityModifier = dexterityAbilityModifier;
        CharacterStatsGameGUI.dexterityAbilityField = dexterityAbilityScore;
        CharacterStatsGameGUI.constitutionContainer = constitutionContainer;
        CharacterStatsGameGUI.constitutionButtons = constitutionButtons;
        CharacterStatsGameGUI.constitutionIncButton = constitutionIncButton;
        CharacterStatsGameGUI.constitutionDecButton = constitutionDecButton;
        CharacterStatsGameGUI.constitutionData = constitutionData;
        CharacterStatsGameGUI.constitutionLabel = constitutionLabel;
        CharacterStatsGameGUI.constitutionAbilityModifier = constitutionAbilityModifier;
        CharacterStatsGameGUI.constitutionAbilityField = constitutionAbilityScore;
        CharacterStatsGameGUI.intelligenceContainer = intelligenceContainer;
        CharacterStatsGameGUI.intelligenceButtons = intelligenceButtons;
        CharacterStatsGameGUI.intelligenceIncButton = intelligenceIncButton;
        CharacterStatsGameGUI.intelligenceDecButton = intelligenceDecButton;
        CharacterStatsGameGUI.intelligenceData = intelligenceData;
        CharacterStatsGameGUI.intelligenceLabel = intelligenceLabel;
        CharacterStatsGameGUI.intelligenceAbilityModifier = intelligenceAbilityModifier;
        CharacterStatsGameGUI.intelligenceAbilityField = intelligenceAbilityScore;
        CharacterStatsGameGUI.wisdomContainer = wisdomContainer;
        CharacterStatsGameGUI.wisdomButtons = wisdomButtons;
        CharacterStatsGameGUI.wisdomIncButton = wisdomIncButton;
        CharacterStatsGameGUI.wisdomDecButton = wisdomDecButton;
        CharacterStatsGameGUI.wisdomData = wisdomData;
        CharacterStatsGameGUI.wisdomLabel = wisdomLabel;
        CharacterStatsGameGUI.wisdomAbilityModifier = wisdomAbilityModifier;
        CharacterStatsGameGUI.wisdomAbilityField = wisdomAbilityScore;
        CharacterStatsGameGUI.charismaContainer = charismaContainer;
        CharacterStatsGameGUI.charismaButtons = charismaButtons;
        CharacterStatsGameGUI.charismaIncButton = charismaIncButton;
        CharacterStatsGameGUI.charismaDecButton = charismaDecButton;
        CharacterStatsGameGUI.charismaData = charismaData;
        CharacterStatsGameGUI.charismaLabel = charismaLabel;
        CharacterStatsGameGUI.charismaAbilityModifier = charismaAbilityModifier;
        CharacterStatsGameGUI.charismaAbilityField = charismaAbilityScore;
        CharacterStatsGameGUI.colARowAColB = colARowAColB;
        CharacterStatsGameGUI.inspirationContainer = inspirationContainer;
        CharacterStatsGameGUI.inspirationField = inspirationScore;
        CharacterStatsGameGUI.inspirationLabel = inspirationLabel;
        CharacterStatsGameGUI.proficiencyBonusContainer = proficiencyBonusContainer;
        CharacterStatsGameGUI.proficiencyBonusField = proficiencyBonusScore;
        CharacterStatsGameGUI.proficiencyBonusLabel = proficiencyBonusLabel;
        CharacterStatsGameGUI.savingThrowContainer = savingThrowContainer;
        CharacterStatsGameGUI.savingThrowStrengthContainer = sTCStrengthContainer;
        CharacterStatsGameGUI.savingThrowStrengthCheckbox = sTCStrengthCheckbox;
        CharacterStatsGameGUI.savingThrowStrengthField = sTCStrengthField;
        CharacterStatsGameGUI.savingThrowStrengthLabel = sTCStrengthLabel;
        CharacterStatsGameGUI.savingThrowDexterityContainer = sTCDexterityContainer;
        CharacterStatsGameGUI.savingThrowDexterityCheckbox = sTCDexterityCheckbox;
        CharacterStatsGameGUI.savingThrowDexterityField = sTCDexterityField;
        CharacterStatsGameGUI.savingThrowDexterityLabel = sTCDexterityLabel;
        CharacterStatsGameGUI.savingThrowConstitutionContainer = sTCConstitutionContainer;
        CharacterStatsGameGUI.savingThrowConstitutionCheckbox = sTCConstitutionCheckbox;
        CharacterStatsGameGUI.savingThrowConstitutionContainer = sTCConstitutionContainer;
        CharacterStatsGameGUI.savingThrowConstitutionField = sTCConstitutionField;
        CharacterStatsGameGUI.savingThrowConstitutionLabel = sTCConstitutionLabel;
        CharacterStatsGameGUI.savingThrowIntelligenceContainer = sTCIntelligenceContainer;
        CharacterStatsGameGUI.savingThrowIntelligenceCheckbox = sTCIntelligenceCheckbox;
        CharacterStatsGameGUI.savingThrowIntelligenceField = sTCIntelligenceField;
        CharacterStatsGameGUI.savingThrowIntelligenceLabel = sTCIntelligenceLabel;
        CharacterStatsGameGUI.savingThrowWisdomContainer = sTCWisdomContainer;
        CharacterStatsGameGUI.savingThrowWisdomCheckbox = sTCWisdomCheckbox;
        CharacterStatsGameGUI.savingThrowWisdomField = sTCWisdomField;
        CharacterStatsGameGUI.savingThrowWisdomLabel = sTCWisdomLabel;
        CharacterStatsGameGUI.savingThrowCharismaContainer = sTCCharismaContainer;
        CharacterStatsGameGUI.savingThrowCharismaCheckbox = sTCCharismaCheckbox;
        CharacterStatsGameGUI.savingThrowCharismaField = sTCCharismaField;
        CharacterStatsGameGUI.savingThrowCharismaLabel = sTCCharismaLabel;
        CharacterStatsGameGUI.savingThrowLabel = savingThrowLabel;
        CharacterStatsGameGUI.skillContainer = skillContainer;
        CharacterStatsGameGUI.skillAcrobaticsContainer = sCAcrobaticsContainer;
        CharacterStatsGameGUI.skillAcrobaticsCheckbox = sCAcrobaticsCheckbox;
        CharacterStatsGameGUI.skillAcrobaticsField = sCAcrobaticsField;
        CharacterStatsGameGUI.skillAcrobaticsLabel = sCAcrobaticsLabel;
        CharacterStatsGameGUI.skillAnimalHandlingContainer = sCAnimalHandlingContainer;
        CharacterStatsGameGUI.skillAnimalHandlingCheckbox = sCAnimalHandlingCheckbox;
        CharacterStatsGameGUI.skillAnimalHandlingField = sCAnimalHandlingField;
        CharacterStatsGameGUI.skillAnimalHandlingLabel = sCAnimalHandlingLabel;
        CharacterStatsGameGUI.skillArcanaContainer = sCArcanaContainer;
        CharacterStatsGameGUI.skillArcanaCheckbox = sCArcanaCheckbox;
        CharacterStatsGameGUI.skillArcanaField = sCArcanaField;
        CharacterStatsGameGUI.skillArcanaLabel = sCArcanaLabel;
        CharacterStatsGameGUI.skillAthleticsContainer = sCAthleticsContainer;
        CharacterStatsGameGUI.skillAthleticsCheckbox = sCAthleticsCheckbox;
        CharacterStatsGameGUI.skillAthleticsField = sCAthleticsField;
        CharacterStatsGameGUI.skillAthleticsLabel = sCAthleticsLabel;
        CharacterStatsGameGUI.skillDeceptionContainer = sCDeceptionContainer;
        CharacterStatsGameGUI.skillDeceptionCheckbox = sCDeceptionCheckbox;
        CharacterStatsGameGUI.skillDeceptionField = sCDeceptionField;
        CharacterStatsGameGUI.skillDeceptionLabel = sCDeceptionLabel;
        CharacterStatsGameGUI.skillHistoryContainer = sCHistoryContainer;
        CharacterStatsGameGUI.skillHistoryCheckbox = sCHistoryCheckbox;
        CharacterStatsGameGUI.skillHistoryField = sCHistoryField;
        CharacterStatsGameGUI.skillHistoryLabel = sCHistoryLabel;
        CharacterStatsGameGUI.skillInsightContainer = sCInsightContainer;
        CharacterStatsGameGUI.skillInsightCheckbox = sCInsightCheckbox;
        CharacterStatsGameGUI.skillInsightField = sCInsightField;
        CharacterStatsGameGUI.skillInsightLabel = sCInsightLabel;
        CharacterStatsGameGUI.skillIntimidationContainer = sCIntimidationContainer;
        CharacterStatsGameGUI.skillIntimidationCheckbox = sCIntimidationCheckbox;
        CharacterStatsGameGUI.skillIntimidationField = sCIntimidationField;
        CharacterStatsGameGUI.skillIntimidationLabel = sCIntimidationLabel;
        CharacterStatsGameGUI.skillInvestigationContainer = sCInvestigationContainer;
        CharacterStatsGameGUI.skillInvestigationCheckbox = sCInvestigationCheckbox;
        CharacterStatsGameGUI.skillInvestigationField = sCInvestigationField;
        CharacterStatsGameGUI.skillInvestigationLabel = sCInvestigationLabel;
        CharacterStatsGameGUI.skillMedicineContainer = sCMedicineContainer;
        CharacterStatsGameGUI.skillMedicineCheckbox = sCMedicineCheckbox;
        CharacterStatsGameGUI.skillMedicineField = sCMedicineField;
        CharacterStatsGameGUI.skillMedicineLabel = sCMedicineLabel;
        CharacterStatsGameGUI.skillNatureContainer = sCNatureContainer;
        CharacterStatsGameGUI.skillNatureCheckbox = sCNatureCheckbox;
        CharacterStatsGameGUI.skillNatureField = sCNatureField;
        CharacterStatsGameGUI.skillNatureLabel = sCNatureLabel;
        CharacterStatsGameGUI.skillPerceptionContainer = sCPerceptionContainer;
        CharacterStatsGameGUI.skillPerceptionCheckbox = sCPerceptionCheckbox;
        CharacterStatsGameGUI.skillPerceptionField = sCPerceptionField;
        CharacterStatsGameGUI.skillPerceptionLabel = sCPerceptionLabel;
        CharacterStatsGameGUI.skillPerformanceContainer = sCPerformanceContainer;
        CharacterStatsGameGUI.skillPerformanceCheckbox = sCPerformanceCheckbox;
        CharacterStatsGameGUI.skillPerformanceField = sCPerformanceField;
        CharacterStatsGameGUI.skillPerformanceLabel = sCPerformanceLabel;
        CharacterStatsGameGUI.skillPersuasionContainer = sCPersuasionContainer;
        CharacterStatsGameGUI.skillPersuasionCheckbox = sCPersuasionCheckbox;
        CharacterStatsGameGUI.skillPersuasionField = sCPersuasionField;
        CharacterStatsGameGUI.skillPersuasionLabel = sCPersuasionLabel;
        CharacterStatsGameGUI.skillReligionContainer = sCReligionContainer;
        CharacterStatsGameGUI.skillReligionCheckbox = sCReligionCheckbox;
        CharacterStatsGameGUI.skillReligionField = sCReligionField;
        CharacterStatsGameGUI.skillReligionLabel = sCReligionLabel;
        CharacterStatsGameGUI.skillSleightOfHandContainer = sCSleightOfHandContainer;
        CharacterStatsGameGUI.skillSleightOfHandCheckbox = sCSleightOfHandCheckbox;
        CharacterStatsGameGUI.skillSleightOfHandField = sCSleightOfHandField;
        CharacterStatsGameGUI.skillSleightOfHandLabel = sCSleightOfHandLabel;
        CharacterStatsGameGUI.skillStealthContainer = sCStealthContainer;
        CharacterStatsGameGUI.skillStealthCheckbox = sCStealthCheckbox;
        CharacterStatsGameGUI.skillStealthField = sCStealthField;
        CharacterStatsGameGUI.skillStealthLabel = sCStealthLabel;
        CharacterStatsGameGUI.skillLabel = skillLabel;
        CharacterStatsGameGUI.colARowB = colARowB;
        CharacterStatsGameGUI.passiveWisdomField = passiveWisdomScore;
        CharacterStatsGameGUI.passiveWisdomLabel = passiveWisdomLabel;
        CharacterStatsGameGUI.proficienciesAndLanguagesContainer = proficienciesAndLanguagesContainer;
        CharacterStatsGameGUI.proficienciesAndLanguagesField = proficienciesAndLanguagesField;
        CharacterStatsGameGUI.proficienciesAndLanguagesLabel = proficienciesAndLanguagesLabel
        CharacterStatsGameGUI.colB = colB;
        CharacterStatsGameGUI.colC = colC;

        CharacterStatsGameGUI.closeButton.onPointerUpObservable.add(function() {
            CharacterStatsGameGUI.hide();
        });
        
        CharacterStatsGameGUI.initialized = true;
        return CharacterStatsGameGUI.controller;
    }
    static getController() {
        return CharacterStatsGameGUI.controller;
    }
    static show() {
        CharacterStatsGameGUI.controller.isVisible = true;
        CharacterStatsGameGUI.isVisible = true;
        GameGUI.windowStack.push(CharacterStatsGameGUI);
        return 0;
    }
    static hide(updateChildren = true) {
        CharacterStatsGameGUI.controller.isVisible = false;
        CharacterStatsGameGUI.isVisible = false;
        GameGUI.windowStack.remove(CharacterStatsGameGUI);
        if (updateChildren) {
            GameGUI.afterHideMenuChildren();
        }
        return 0;
    }
    static set(creatureController = Game.playerController, parentCallbackID = null) {
        if (!(creatureController instanceof EntityController)) {
            if (CreatureController.has(creatureController)) {
                creatureController = CreatureController.get(creatureController);
            }
            else {
                return 2;
            }
        }
        let callbackID = Tools.genUUIDv4();
        Callback.create(callbackID, parentCallbackID, [creatureController], CharacterStatsGameGUI.setResponse);
        Game.entityLogicWorkerPostMessage("getEntity", 0, {"entityID":creatureController.entityID}, callbackID);
        return 0;
    }
    static setResponse(creatureController, response, callbackID) {
        CharacterStatsGameGUI.nameField.text = response.name;
        CharacterStatsGameGUI.classField.text = response.primaryCharacterClass.name;
        //CharacterStatsGameGUI.backgroundField.text = creatureEntity.get();
        //CharacterStatsGameGUI.accountNameField.text = creatureEntity.get();
        CharacterStatsGameGUI.raceField.text = CreatureSubTypeEnum.properties[response.creatureSubType].name;
        //CharacterStatsGameGUI.alignmentField.text = creatureEntity.get();
        CharacterStatsGameGUI.xpField.text = String(response.experiencePoints);
        let checkbox = false;
        let number = DND5E.calculateAbilityModifier(response.strength);
        CharacterStatsGameGUI.strengthAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.strengthAbilityField.text = String(response.strength);
        number = DND5E.calculateAbilityModifier(response.dexterity);
        CharacterStatsGameGUI.dexterityAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.dexterityAbilityField.text = String(response.dexterity)
        number = DND5E.calculateAbilityModifier(response.constitution);
        CharacterStatsGameGUI.constitutionAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.constitutionAbilityField.text = String(response.constitution);
        number = DND5E.calculateAbilityModifier(response.intelligence);
        CharacterStatsGameGUI.intelligenceAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.intelligenceAbilityField.text = String(response.intelligence);
        number = DND5E.calculateAbilityModifier(response.wisdom);
        CharacterStatsGameGUI.wisdomAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.wisdomAbilityField.text = String(response.wisdom);
        number = DND5E.calculateAbilityModifier(response.charisma);
        CharacterStatsGameGUI.charismaAbilityModifier.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.charismaAbilityField.text = String(response.charisma);
        
        CharacterStatsGameGUI.passiveWisdomField.text = String(response.passivePerception);
        number = response.proficiencyBonus;
        CharacterStatsGameGUI.proficiencyBonusField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.inspirationField.text = String(number);
        // saving throws
        number = DND5E.calculateAbilityModifier(response.strength);
        if (response.proficiencies.hasOwnProperty("STRENGTH")) {
            number += response.proficiencyBonus;
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGameGUI.savingThrowStrengthField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.savingThrowStrengthCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(response.dexterity);
        if (response.proficiencies.hasOwnProperty("DEXTERITY")) {
            number += response.proficiencyBonus;
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGameGUI.savingThrowDexterityField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.savingThrowDexterityCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(response.constitution);
        if (response.proficiencies.hasOwnProperty("CONSTITUTION")) {
            number += response.proficiencyBonus;
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGameGUI.savingThrowConstitutionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.savingThrowConstitutionCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(response.intelligence);
        if (response.proficiencies.hasOwnProperty("INTELLIGENCE")) {
            number += response.proficiencyBonus;
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGameGUI.savingThrowIntelligenceField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.savingThrowIntelligenceCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(response.wisdom);
        if (response.proficiencies.hasOwnProperty("WISDOM")) {
            number += response.proficiencyBonus;
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGameGUI.savingThrowWisdomField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.savingThrowWisdomCheckbox.isChecked = checkbox;
        number = DND5E.calculateAbilityModifier(response.charisma);
        if (response.proficiencies.hasOwnProperty("CHARISMA")) {
            number += response.proficiencyBonus;
            checkbox = true;
        }
        else {
            checkbox = false;
        }
        CharacterStatsGameGUI.savingThrowCharismaField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.savingThrowCharismaCheckbox.isChecked = checkbox;
        // other proficiencies and languages
        number = response.skillScores["ACROBATICS"];
        CharacterStatsGameGUI.skillAcrobaticsField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillAcrobaticsCheckbox.isChecked = response.proficiencies.hasOwnProperty("ACROBATICS");
        number = response.skillScores["ANIMAL_HANDLING"];
        CharacterStatsGameGUI.skillAnimalHandlingField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillAnimalHandlingCheckbox.isChecked = response.proficiencies.hasOwnProperty("ANIMAL_HANDLING");
        number = response.skillScores["ARCANA"];
        CharacterStatsGameGUI.skillArcanaField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillArcanaCheckbox.isChecked = response.proficiencies.hasOwnProperty("ARCANA");
        number = response.skillScores["ATHLETICS"];
        CharacterStatsGameGUI.skillAthleticsField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillAthleticsCheckbox.isChecked = response.proficiencies.hasOwnProperty("ATHLETICS");
        number = response.skillScores["DECEPTION"];
        CharacterStatsGameGUI.skillDeceptionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillDeceptionCheckbox.isChecked = response.proficiencies.hasOwnProperty("DECEPTION");
        number = response.skillScores["HISTORY"];
        CharacterStatsGameGUI.skillHistoryField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillHistoryCheckbox.isChecked = response.proficiencies.hasOwnProperty("HISTORY");
        number = response.skillScores["INSIGHT"];
        CharacterStatsGameGUI.skillInsightField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillInsightCheckbox.isChecked = response.proficiencies.hasOwnProperty("INSIGHT");
        number = response.skillScores["INTIMIDATION"];
        CharacterStatsGameGUI.skillIntimidationField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillIntimidationCheckbox.isChecked = response.proficiencies.hasOwnProperty("INTIMIDATION");
        number = response.skillScores["INVESTIGATION"];
        CharacterStatsGameGUI.skillInvestigationField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillInvestigationCheckbox.isChecked = response.proficiencies.hasOwnProperty("INVESTIGATION");
        number = response.skillScores["MEDICINE"];
        CharacterStatsGameGUI.skillMedicineField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillMedicineCheckbox.isChecked = response.proficiencies.hasOwnProperty("MEDICINE");
        number = response.skillScores["NATURE"];
        CharacterStatsGameGUI.skillNatureField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillNatureCheckbox.isChecked = response.proficiencies.hasOwnProperty("NATURE");
        number = response.skillScores["PERCEPTION"];
        CharacterStatsGameGUI.skillPerceptionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillPerceptionCheckbox.isChecked = response.proficiencies.hasOwnProperty("PERCEPTION");
        number = response.skillScores["PERFORMANCE"];
        CharacterStatsGameGUI.skillPerformanceField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillPerformanceCheckbox.isChecked = response.proficiencies.hasOwnProperty("PERFORMANCE");
        number = response.skillScores["PERSUASION"];
        CharacterStatsGameGUI.skillPersuasionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillPersuasionCheckbox.isChecked = response.proficiencies.hasOwnProperty("PERSUASION");
        number = response.skillScores["RELIGION"];
        CharacterStatsGameGUI.skillReligionField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillReligionCheckbox.isChecked = response.proficiencies.hasOwnProperty("RELIGION");
        number = response.skillScores["SLEIGHT_OF_HAND"];
        CharacterStatsGameGUI.skillSleightOfHandField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillSleightOfHandCheckbox.isChecked = response.proficiencies.hasOwnProperty("SLEIGHT_OF_HAND");
        number = response.skillScores["STEALTH"];
        CharacterStatsGameGUI.skillStealthField.text = String((number > 0 ? "+" : "") + number);
        CharacterStatsGameGUI.skillStealthCheckbox.isChecked = response.proficiencies.hasOwnProperty("STEALTH");

        // proficienciesAndLanguages will include Languages, Armour, Weapons, and Tools & Kits
    }
    static update() {
        CharacterStatsGameGUI.set(Game.playerController);
        return 0;
    }
}